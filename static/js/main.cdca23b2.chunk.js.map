{"version":3,"sources":["nav/github.svg","shared/Tabs.js","games/barenpark/Barenpark.js","games/foodChainMagnate/calc/UnitPrices.js","games/foodChainMagnate/calc/Profit.js","games/foodChainMagnate/calc/BulkCalc.js","games/foodChainMagnate/calc/Calc.js","games/foodChainMagnate/milestones/milestoneData.js","games/foodChainMagnate/milestones/Milestone.js","games/foodChainMagnate/milestones/Milestones.js","games/foodChainMagnate/setup/playerData.js","games/foodChainMagnate/setup/Setup.js","games/foodChainMagnate/FoodChainMagnate.js","nav/ExpandIcon.js","nav/SiteSearch.js","nav/Nav.js","App.js","index.js","serviceWorker.js"],"names":["module","exports","useStyles","makeStyles","appBar","display","flexDirection","maxHeight","spacer","flex","toolbar","minHeight","title","wordWrap","Tabs","tabs","classes","useState","tabValue","setTabValue","Fragment","AppBar","position","color","className","value","onChange","event","variant","scrollButtons","map","index","label","Tab","key","content","Barenpark","UnitPrices","FormControl","InputLabel","htmlFor","Select","input","Input","id","MenuProps","MenuListProps","style","Array","v","i","unitPrice","MenuItem","theme","container","marginRight","marginBottom","width","right","subheader","textAlign","palette","text","secondary","dollars","fontSize","fontWeight","useTheme","Profit","defaultState","normalSales","gardenSales","marketingBonuses","cfo","card","margin","maxWidth","field","switch","marginTop","BulkCalc","setUnitPrice","setNormalSales","setGardenSales","setMarketingBonuses","setCfo","cfoMultiplier","normalProfit","gardenProfit","marketingProfit","profit","Math","ceil","CardHeader","CardContent","FormGroup","target","TextField","name","type","FormControlLabel","control","Switch","checked","CardActions","Button","onClick","bonusItemsSold","garden","itemsSold","select","Calc","setBonusItemsSold","setGarden","setItemsSold","salesError","bonusError","salesDollars","bonusDollars","gardenMultiplier","error","count","FormHelperText","originalMilestoneData","alternateMilestoneData","maxRoundTwo","milestone","height","userSelect","cursor","border","borderRadius","textTransform","bottom","checkmark","left","x","Milestone","backgroundColor","localStorageKey","milestoneTypes","Milestones","getDataArray","milestoneType","data","oldStorageData","localStorage","getItem","parsedData","JSON","parse","milestones","ex","console","warn","removeItem","setMilestones","useEffect","stringify","setItem","updateMilestones","newMilestones","milestoneData","newValue","RadioGroup","group","newType","Radio","2","mapSize","employees","billboards","reserve","3","4","5","subheading","Setup","players","setPlayers","playerData","Object","keys","Typography","FoodChainMagnate","closed","transition","transform","primary","open","ExpandIcon","SiteSearch","searchOpen","setSearchOpen","Tooltip","IconButton","drawer","paddingLeft","paddingRight","nested","spacing","link","textDecoration","Nav","expandedMenu","setExpandedMenu","drawerOpen","setDrawerOpen","openDrawer","closeDrawer","handleExpand","Toolbar","menuButton","href","alt","src","githubSvg","SwipeableDrawer","onOpen","onClose","List","ListItem","button","ListItemIcon","ListItemText","Collapse","in","timeout","to","createMuiTheme","App","Component","ThemeProvider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdca23b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.7337e417.svg\";","import React, {useState} from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport AppBar from '@material-ui/core/AppBar'\nimport MuiTabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nfunction Tabs({tabs}) {\n    const classes = useStyles()\n    const [tabValue, setTabValue] = useState(0)\n    const handleChange = (event, value) => setTabValue(value)\n\n    return (\n        <React.Fragment>\n            {/* Tabs */}\n            <AppBar position='static' color='default' className={classes.appBar}>\n                <MuiTabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    variant='scrollable'\n                    scrollButtons='auto'\n                >\n                    {tabs.map(({label}, index) => <Tab key={index} label={label}/>)}\n                </MuiTabs>\n            </AppBar>\n\n            {/* Content area */}\n            {tabs.map(({content}, index) => tabValue === index ? content : null)}\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles({\n    appBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        maxHeight: 48\n    },\n    spacer: {\n        flex: 1\n    },\n    toolbar: {\n        minHeight: 48\n    },\n    title: {\n        wordWrap: 'none'\n    }\n})\n\nexport default Tabs\n","import React from 'react'\nimport Tabs from '../../shared/Tabs'\n\nfunction Barenpark() {\n    const tabs = [\n        {label: 'Setup', content: <div/>},\n        {label: 'Achievements', content: <div/>},\n    ]\n    return <Tabs tabs={tabs}/>\n\n}\n\nexport default Barenpark\n","import React from 'react'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nfunction UnitPrices({className, onChange, value}) {\n    return (\n        <FormControl className={className}>\n            <InputLabel htmlFor=\"unitPrice\">Unit Price</InputLabel>\n            <Select\n                value={value}\n                onChange={onChange}\n                input={<Input id=\"unitPrice\"/>}\n                MenuProps={{\n                    MenuListProps: {\n                        style: {\n                            maxHeight: 256\n                        }\n                    }\n                }}\n            >\n                {[...new Array(26)].map((v, i) => i - 5).map(unitPrice =>\n                    <MenuItem key={unitPrice} value={unitPrice}>{`$${unitPrice}`}</MenuItem>)\n                }\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default UnitPrices\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Profit({value = 0}) {\n    const classes = useStyles()\n    return (\n        <div className={classes.container}>\n            <div className={classes.subheader}>Profit</div>\n            <div className={classes.dollars}>{`$${value}`}</div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        marginRight: 16,\n        marginBottom: 16,\n        width: '100%',\n        display: 'inline-block',\n        right: 0\n    },\n    subheader: {\n        textAlign: 'right',\n        color: theme.palette.text.secondary\n    },\n    dollars: {\n        fontSize: '38px',\n        fontWeight: 'bold',\n        color: 'darkgreen',\n        textAlign: 'right'\n    }\n}), {useTheme: true})\n\nexport default Profit\n","import React, {useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport UnitPrices from './UnitPrices'\nimport Profit from './Profit'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction BulkCalc() {\n    const classes = useStyles()\n    const [unitPrice, setUnitPrice] = useState(defaultState.unitPrice)\n    const [normalSales, setNormalSales] = useState(defaultState.normalSales)\n    const [gardenSales, setGardenSales] = useState(defaultState.gardenSales)\n    const [marketingBonuses, setMarketingBonuses] = useState(defaultState.marketingBonuses)\n    const [cfo, setCfo] = useState(defaultState.cfo)\n\n    const cfoMultiplier = cfo ? 1.5 : 1\n    const normalProfit = normalSales * unitPrice\n    const gardenProfit = gardenSales * unitPrice * 2\n    const marketingProfit = (marketingBonuses * 5)\n    const profit = Math.ceil(cfoMultiplier * (normalProfit + gardenProfit + marketingProfit))\n\n    const reset = () => {\n        setUnitPrice(defaultState.unitPrice)\n        setNormalSales(defaultState.normalSales)\n        setGardenSales(defaultState.gardenSales)\n        setMarketingBonuses(defaultState.marketingBonuses)\n        setCfo(defaultState.cfo)\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Bulk Sale Calculator\"/>\n            <CardContent>\n                <FormGroup>\n                    {/* Unit Price */}\n                    <UnitPrices\n                        className={classes.field}\n                        value={unitPrice}\n                        onChange={event => setUnitPrice(event.target.value)}\n                    />\n\n                    {/* Normal Sales */}\n                    <TextField\n                        className={classes.field}\n                        name=\"normalSales\"\n                        label=\"Normal Sales\"\n                        value={normalSales}\n                        type=\"number\"\n                        onChange={event => setNormalSales(event.target.value)}\n                    />\n\n                    {/* Garden Sales */}\n                    <TextField\n                        className={classes.field}\n                        name=\"gardenSales\"\n                        label=\"Garden Sales\"\n                        value={gardenSales}\n                        type=\"number\"\n                        onChange={event => setGardenSales(event.target.value)}\n                    />\n\n                    {/* Marketing Bonuses */}\n                    <TextField\n                        className={classes.field}\n                        name=\"marketingBonuses\"\n                        label=\"Marketing Bonuses\"\n                        value={marketingBonuses}\n                        type=\"number\"\n                        onChange={event => setMarketingBonuses(event.target.value)}\n                    />\n\n                    {/* CFO Bonus */}\n                    <FormControlLabel\n                        className={classes.switch}\n                        label=\"CFO Bonus\"\n                        control={\n                            <Switch\n                                checked={cfo}\n                                onChange={event => setCfo(event.target.checked)}\n                            />\n                        }\n                    />\n                </FormGroup>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n                <Profit value={profit}/>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst defaultState = {\n    unitPrice: 10,\n    normalSales: 0,\n    gardenSales: 0,\n    marketingBonuses: 0,\n    cfo: false\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 275\n    },\n    field: {\n        marginBottom: 24\n    },\n    switch: {\n        marginTop: -6\n    }\n})\n\nexport default BulkCalc\n","import React, {useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Select from '@material-ui/core/Select'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport UnitPrices from './UnitPrices'\nimport Profit from './Profit'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Calc() {\n    const classes = useStyles()\n    const [bonusItemsSold, setBonusItemsSold] = useState(defaultState.bonusItemsSold)\n    const [cfo, setCfo] = useState(defaultState.cfo)\n    const [garden, setGarden] = useState(defaultState.garden)\n    const [itemsSold, setItemsSold] = useState(defaultState.itemsSold)\n    const [unitPrice, setUnitPrice] = useState(defaultState.unitPrice)\n\n    const salesError = !garden && itemsSold > 3\n    const bonusError = bonusItemsSold > itemsSold\n\n    const salesDollars = unitPrice * itemsSold\n    const bonusDollars = bonusItemsSold * 5\n    const gardenMultiplier = garden ? 2 : 1\n    const cfoMultiplier = cfo ? 1.5 : 1\n    const profit = Math.ceil(((salesDollars * gardenMultiplier) + bonusDollars) * cfoMultiplier)\n\n    const reset = () => {\n        setBonusItemsSold(defaultState.bonusItemsSold)\n        setCfo(defaultState.cfo)\n        setGarden(defaultState.garden)\n        setItemsSold(defaultState.itemsSold)\n        setUnitPrice(defaultState.unitPrice)\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Dinnertime Calculator\"/>\n            <CardContent>\n                <FormGroup>\n                    {/*Unit Price */}\n                    <UnitPrices\n                        className={classes.select}\n                        value={unitPrice}\n                        onChange={event => setUnitPrice(event.target.value)}\n                    />\n\n                    {/* Items Sold */}\n                    <FormControl className={classes.select} error={salesError}>\n                        <InputLabel htmlFor=\"sales\">Items Sold</InputLabel>\n                        <Select\n                            value={itemsSold}\n                            onChange={event => setItemsSold(event.target.value)}\n                            input={<Input id=\"sales\"/>}\n                        >\n                            {[1, 2, 3, 4, 5].map(count =>\n                                <MenuItem key={count} value={count}>{`${count} item(s) sold`}</MenuItem>)\n                            }\n                        </Select>\n                        {\n                            salesError &&\n                            <FormHelperText>Items sold must be at most 3 for regular house.</FormHelperText>\n                        }\n                    </FormControl>\n\n                    {/* Bonus Sales */}\n                    <FormControl className={classes.select} error={bonusError}>\n                        <InputLabel htmlFor=\"bonus\">Marketing Bonuses</InputLabel>\n                        <Select\n                            value={bonusItemsSold}\n                            onChange={event => setBonusItemsSold(event.target.value)}\n                            input={<Input id=\"bonus\"/>}\n                        >\n                            {[0, 1, 2, 3, 4, 5].map(count =>\n                                <MenuItem key={count} value={count}>{`${count} bonus(es)`}</MenuItem>)\n                            }\n                        </Select>\n                        {\n                            bonusError &&\n                            <FormHelperText>Marketing bonuses may not exceed items sold.</FormHelperText>\n                        }\n                    </FormControl>\n\n                    {/* Garden House */}\n                    <FormControlLabel\n                        className={classes.switch}\n                        label=\"Garden House\"\n                        control={\n                            <Switch\n                                checked={garden}\n                                onChange={event => setGarden(event.target.checked)}\n                            />\n                        }\n                    />\n\n                    {/* CFO Bonus */}\n                    <FormControlLabel\n                        className={classes.switch}\n                        label=\"CFO Bonus\"\n                        control={\n                            <Switch\n                                checked={cfo}\n                                onChange={event => setCfo(event.target.checked)}\n                            />\n                        }\n                    />\n                </FormGroup>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n                <Profit value={profit}/>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst defaultState = {\n    bonusItemsSold: 0,\n    cfo: false,\n    garden: false,\n    itemsSold: 1,\n    unitPrice: 10\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 275\n    },\n    select: {\n        marginBottom: 24\n    },\n    switch: {\n        marginTop: -6\n    }\n})\n\nexport default Calc\n","export const originalMilestoneData = [\n    {color: '#AF95C2', title: 'to hire 3 people in 1 turn', text: '+2 Management Trainees.'},\n    {color: '#BDB6B3', title: 'to train someone', text: '$15 discount on salaries.'},\n    {color: '#98C2C9', title: 'billboard placed', text: 'No salaries for marketeers; Eternal marketing.'},\n    {color: '#AF95C2', title: 'to throw away drink/food', text: 'Get a freezer that stores 10 items (drink or food).'},\n    {color: '#95A968', title: 'burger produced', text: '+1 Burger Cook.'},\n    {color: '#98C2C9', title: 'burger marketed', text: '+$5 for every burger sold.'},\n    {color: '#AF95C2', title: 'waitress played', text: 'Each waitress +$2.'},\n    {color: '#95A968', title: 'pizza produced', text: '+1 Pizza Cook.'},\n    {color: '#98C2C9', title: 'pizza marketed', text: '+$5 for every pizza sold.'},\n    {color: '#AF95C2', title: 'to have $20', text: 'May see bank reserve cards.'},\n    {color: '#A9CB94', title: 'Errand Boy played', text: 'All buyers get +1 drink from each source.'},\n    {color: '#98C2C9', title: 'drink marketed', text: '+$5 for every drink sold.'},\n    {color: '#AF95C2', title: 'to have $100', text: 'Your CEO counts as CFO (+50% to cash earned). May not have CFO.'},\n    {color: '#A9CB94', title: 'Cart Operator played', text: 'Buyers get range +1.'},\n    {color: '#98C2C9', title: 'airplane campaign', text: 'Count +2 open slots when determining order of play.'},\n    {color: '#EAA791', title: 'to lower prices', text: 'Price -$1.'},\n    {color: '#BDB6B3', title: 'to pay $20 or more in salaries', text: 'May use multiple trainers on the same person.'},\n    {color: '#98C2C9', title: 'radio campaign', text: 'Your radios market 2 goods per turn instead of 1.'},\n    {color: '#cc0000', title: 'demand fulfulled by someone else', text: 'Range -1.'}\n]\nexport const alternateMilestoneData = [\n    {color: '#98C2C9', title: 'marketeer used', text: '$5 for every good marketed; Range -2.', maxRoundTwo: true},\n    {color: '#98C2C9', title: 'marketing trainee used', text: '+1 Kitchen Trainee and +1 Errand Boy.'},\n    {color: '#98C2C9', title: 'campaign manager used', text: 'May place second mailbox or billboard advertising same product and duration (only once).'},\n    {color: '#98C2C9', title: 'brand manager used', text: 'May place 2 different goods on first plane. Choose priority of goods when placed.'},\n    {color: '#98C2C9', title: 'brand director played', text: 'Your radio is permanent.'},\n    {color: '#EAA791', title: 'burger sold', text: 'CEO always has 4 slots (regardless of reserve cards).'},\n    {color: '#EAA791', title: 'pizza sold', text: 'Place radio tower on tile of sale (house) advertising pizza for two turns.'},\n    {color: '#EAA791', title: 'lemonade sold', text: 'Any employee can be trained on the job, preserving color.'},\n    {color: '#EAA791', title: 'beer sold', text: 'May pay salary with food or drink.'},\n    {color: '#EAA791', title: 'coke sold', text: 'Get a freezer that stores 10 items (drink or food).'},\n    {color: '#BDB6B3', title: 'recruiting girl played', text: 'Get a free executive vice president; Pay no salary for him.', maxRoundTwo: true},\n    {color: '#BDB6B3', title: 'trainer played', text: '+1 trainer; No longer need to fire employees if broke.', maxRoundTwo: true},\n    {color: '#BDB6B3', title: 'discount manager played', text: 'If you discount by -$3 or more, $100 is removed from the bank.'},\n    {color: '#AF95C2', title: 'house built', text: 'May use multiple trainers on the same person.'},\n    {color: '#934a34', title: 'new restaurant built', text: 'Place permanent mailbox in restaurant area.'},\n    {color: '#AF95C2', title: 'waitress played', text: 'Your salaries are $3 each.'},\n    {color: '#A9CB94', title: 'cart operator played', text: 'Double amount of drinks hauled by cart/truck/zeppelin.'},\n    {color: '#cc0000', title: 'demand fulfulled by someone else', text: 'Range -1.'}\n]\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Milestone({index, milestone, onChange, value}) {\n    const classes = useStyles()\n    const {color, title, text, maxRoundTwo} = milestone\n\n    const handleClick = () => {\n        let nextValue\n        if (value === 'available') nextValue = 'mine'\n        else if (value === 'mine') nextValue = 'unavailable'\n        else nextValue = 'available'\n\n        return onChange(index, nextValue)\n    }\n\n    return (\n        <div\n            className={classes.milestone}\n            style={{backgroundColor: color}}\n            onClick={handleClick}\n        >\n            {value === 'mine' && <div className={classes.checkmark}>✓</div>}\n            {value === 'unavailable' && <div className={classes.x}>✗</div>}\n            <div className={classes.container}>\n                <div className={classes.title}>First {title}</div>\n                <div className={classes.text}>{text}</div>\n                {maxRoundTwo && <div className={classes.maxRoundTwo}>Remove after<br/>round two</div>}\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    milestone: {\n        margin: 8,\n        width: 155,\n        height: 155,\n        userSelect: 'none',\n        cursor: 'pointer',\n        border: '1px solid black',\n        borderRadius: 10\n    },\n    container: {\n        margin: 6\n    },\n    title: {\n        textAlign: 'center',\n        fontWeight: 600,\n        textTransform: 'uppercase',\n        marginBottom: 12,\n        color: '#000'\n    },\n    text: {\n        textAlign: 'center',\n        fontSize: 'small',\n        color: '#000'\n    },\n    maxRoundTwo: {\n        width: 145,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 'small',\n        color: '#f00',\n        position: 'absolute',\n        bottom: 4\n    },\n    checkmark: {\n        fontSize: 'xx-large',\n        color: '#0f0',\n        position: 'absolute',\n        left: 2,\n        bottom: 0\n    },\n    x: {\n        fontSize: 'xx-large',\n        color: '#f00',\n        position: 'absolute',\n        left: 4,\n        bottom: 0\n    }\n})\n\nexport default Milestone\n","import FormControlLabel from '@material-ui/core/FormControlLabel'\nimport React, {useEffect, useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Button from '@material-ui/core/Button'\nimport Masonry from 'react-masonry-component'\nimport {originalMilestoneData, alternateMilestoneData} from './milestoneData'\nimport Milestone from './Milestone'\nimport {makeStyles} from '@material-ui/styles'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\n\nfunction Milestones() {\n    const classes = useStyles()\n\n    const getDataArray = (type = milestoneType) => {\n        const data = type === 'original' ? originalMilestoneData : alternateMilestoneData\n        return data.map(() => 'available')\n    }\n\n    const [{milestones, milestoneType}, setMilestones] = useState(() => {\n        try {\n            const oldStorageData = localStorage.getItem(localStorageKey)\n            const parsedData = JSON.parse(oldStorageData)\n            if (parsedData && parsedData.milestones && parsedData.milestoneType) {\n                return parsedData\n            }\n        } catch (ex) {\n            console.warn('Error loading local storage data: ', ex)\n            localStorage.removeItem(localStorageKey)\n        }\n        return {\n            milestones: getDataArray('original'),\n            milestoneType: 'original'\n        }\n    })\n\n    useEffect(() => {\n        const data = JSON.stringify({milestones, milestoneType})\n        localStorage.setItem(localStorageKey, data)\n    }, [milestones, milestoneType])\n\n    const reset = () => {\n        const newMilestones = getDataArray()\n        setMilestones({milestones: newMilestones, milestoneType})\n\n        const newValue = JSON.stringify({\n            milestones: newMilestones,\n            milestoneType\n        })\n        localStorage.setItem(localStorageKey, newValue)\n    }\n\n    const updateMilestones = (index, value) => {\n        const newMilestones = [...milestones]\n        newMilestones[index] = value\n        setMilestones({milestones: newMilestones, milestoneType})\n    }\n\n    const handleMilestoneSetChange = event => {\n        const newType = event.target.value\n        if (newType !== milestoneType) {\n            // set defaults\n            setMilestones({\n                milestones: getDataArray(newType),\n                milestoneType: newType\n            })\n        }\n    }\n\n    const milestoneData = milestoneType === 'original' ? originalMilestoneData : alternateMilestoneData\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Milestone Tracker\"/>\n            <CardContent>\n                <Masonry>\n                    {milestones.map((value, key) =>\n                        <Milestone\n                            key={key}\n                            index={key}\n                            milestone={milestoneData[key]}\n                            value={value}\n                            onChange={updateMilestones}\n                        />\n                    )}\n                </Masonry>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n                <div className={classes.spacer}/>\n                <RadioGroup\n                    name=\"milestoneType\"\n                    className={classes.group}\n                    value={milestoneType}\n                    onChange={handleMilestoneSetChange}\n                >\n                    <div className={classes.milestoneTypes}>\n                        <FormControlLabel\n                            value=\"original\"\n                            control={<Radio/>}\n                            label=\"Original\"\n                        />\n                        <FormControlLabel\n                            value=\"alternate\"\n                            control={<Radio/>}\n                            label=\"Alternate\"\n                        />\n                    </div>\n                </RadioGroup>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport const localStorageKey = 'milestones'\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 900\n    },\n    spacer: {\n        display: 'flex',\n        flex: 1\n    },\n    milestoneTypes: {\n        display: 'flex',\n        flexDirection: 'row'\n    }\n})\n\nexport default Milestones\n","export default {\n    2: {\n        mapSize: '3 x 3',\n        employees: '1',\n        billboards: '#2, #3, #12, #15, #16',\n        reserve: '$100'\n    },\n    3: {\n        mapSize: '3 x 4',\n        employees: '1',\n        billboards: '#2, #3, #15, #16',\n        reserve: '$150'\n    },\n    4: {\n        mapSize: '4 x 4',\n        employees: '2',\n        billboards: '#3, #16',\n        reserve: '$200'\n    },\n    5: {\n        mapSize: '4 x 5',\n        employees: '3',\n        billboards: 'None',\n        reserve: '$250'\n    }\n}\n","import React, {useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport playerData from './playerData'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Setup() {\n    const classes = useStyles()\n    const [players, setPlayers] = useState(2)\n    const data = playerData[players]\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Setup Reference\"/>\n            <CardContent>\n                <FormGroup>\n                    {/* Players */}\n                    <FormControl>\n                        <InputLabel htmlFor=\"players\">Players</InputLabel>\n                        <Select\n                            value={players}\n                            onChange={event => setPlayers(event.target.value)}\n                            input={<Input id=\"players\"/>}\n                        >\n                            {\n                                Object.keys(playerData).map(count =>\n                                    <MenuItem key={count} value={count}>{`${count} players`}</MenuItem>\n                                )\n                            }\n                        </Select>\n                    </FormControl>\n\n                    {/* Map Size */}\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.subheading}>\n                        Map Size\n                    </Typography>\n                    <Typography variant=\"body2\">{data.mapSize}</Typography>\n\n                    {/* 1x Employees */}\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.subheading}>1x\n                        Employees\n                    </Typography>\n                    <Typography variant=\"body2\">{data.employees}</Typography>\n\n                    {/* Billboards Removed */}\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.subheading}>\n                        Billboards Removed</Typography>\n                    <Typography variant=\"body2\">{data.billboards}\n                    </Typography>\n\n                    {/* Reserve */}\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.subheading}>\n                        Reserve\n                    </Typography>\n                    <Typography variant=\"body2\">{data.reserve}</Typography>\n                </FormGroup>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 225\n    },\n    subheading: {\n        marginTop: 16\n    }\n})\n\nexport default Setup\n","import React from 'react'\nimport Tabs from '../../shared/Tabs'\nimport BulkCalc from './calc/BulkCalc'\nimport Calc from './calc/Calc'\nimport Milestones from './milestones/Milestones'\nimport Setup from './setup/Setup'\n\nfunction FoodChainMagnate() {\n    const tabs = [\n        {label: 'Simple Sales', content: <Calc/>},\n        {label: 'Bulk Sales', content: <BulkCalc/>},\n        {label: 'Milestones', content: <Milestones/>},\n        {label: 'Setup', content: <Setup/>}\n    ]\n    return <Tabs tabs={tabs}/>\n}\n\nexport default FoodChainMagnate\n","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\n\nfunction ExpandIcon({open}) {\n    const classes = useStyles()\n    return <ExpandLessIcon className={open ? classes.open : classes.closed}/>\n}\n\nconst useStyles = makeStyles(theme => ({\n    closed: {\n        transition: 'transform .2s',\n        transform: 'rotate(180deg)',\n        color: `${theme.palette.text.primary} !important`\n    },\n    open: {\n        transition: 'transform .2s',\n        transform: 'rotate(0deg)',\n        color: `${theme.palette.text.primary} !important`\n    }\n}))\n\nexport default ExpandIcon\n","import React, {useState} from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nfunction SiteSearch() {\n    const [searchOpen, setSearchOpen] = useState(false)\n    const toggleSearch = () => setSearchOpen(!searchOpen)\n\n    return (\n        <Tooltip title='Site Search'>\n            <IconButton onClick={toggleSearch}>\n                <SearchIcon/>\n            </IconButton>\n        </Tooltip>\n    )\n}\n\nexport default SiteSearch\n","import React, {useState} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport ExpandIcon from './ExpandIcon'\nimport githubSvg from './github.svg'\nimport {makeStyles} from '@material-ui/styles'\nimport {Link} from 'react-router-dom'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ExtensionIcon from '@material-ui/icons/Extension'\nimport BuildIcon from '@material-ui/icons/Build'\nimport Collapse from '@material-ui/core/Collapse'\nimport SiteSearch from './SiteSearch'\n\nfunction Nav() {\n    const classes = useStyles()\n    const [expandedMenu, setExpandedMenu] = useState(null)\n    const [drawerOpen, setDrawerOpen] = useState(false)\n\n    const openDrawer = () => setDrawerOpen(true)\n    const closeDrawer = () => setDrawerOpen(false)\n\n    const handleExpand = value => () => setExpandedMenu(expandedMenu === value ? null : value)\n\n    return (\n        <React.Fragment>\n            <AppBar position='static'>\n                <Toolbar className={classes.toolbar}>\n                    {/* Menu button */}\n                    <IconButton className={classes.menuButton} onClick={openDrawer}>\n                        <MenuIcon/>\n                    </IconButton>\n\n                    {/* Title bar */}\n                    <Typography variant='h6' className={classes.title}>\n                        Board Game Helper\n                    </Typography>\n\n                    {/* Search */}\n                    <SiteSearch/>\n\n                    {/* Top right icons */}\n                    <Tooltip title='Contribute on GitHub!'>\n                        <IconButton target='_blank' href='https://github.com/NiXXeD/bghelper'>\n                            <img alt='github link' width='24' height='24' src={githubSvg}/>\n                        </IconButton>\n                    </Tooltip>\n                </Toolbar>\n            </AppBar>\n\n            {/* Left Drawer*/}\n            <SwipeableDrawer open={drawerOpen} onOpen={openDrawer} onClose={closeDrawer} className={classes.drawer}>\n                <List>\n                    {/* Games list */}\n                    <ListItem button onClick={handleExpand('games')}>\n                        <ListItemIcon><ExtensionIcon/></ListItemIcon>\n                        <ListItemText primary='Games'/>\n                        <ExpandIcon open={expandedMenu === 'games'}/>\n                    </ListItem>\n                    <Collapse in={expandedMenu === 'games'} timeout='auto'>\n                        <Link className={classes.link} to='/barenpark'>\n                            <ListItem className={classes.nested} button onClick={closeDrawer}>\n                                <ListItemText primary='Bärenpark'/>\n                            </ListItem>\n                        </Link>\n                        <Link className={classes.link} to='/foodChainMagnate'>\n                            <ListItem className={classes.nested} button onClick={closeDrawer}>\n                                <ListItemText primary='Food Chain Magnate'/>\n                            </ListItem>\n                        </Link>\n                    </Collapse>\n\n                    {/* Utilities */}\n                    <ListItem button onClick={handleExpand('utils')}>\n                        <ListItemIcon><BuildIcon/></ListItemIcon>\n                        <ListItemText primary='Utilities'/>\n                        <ExpandIcon open={expandedMenu === 'utils'}/>\n                    </ListItem>\n                    <Collapse in={expandedMenu === 'utils'} timeout='auto'>\n                        <ListItem className={classes.nested} button onClick={closeDrawer}>\n                            <ListItemText primary='TBD'/>\n                        </ListItem>\n                    </Collapse>\n                </List>\n            </SwipeableDrawer>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: 300\n    },\n    toolbar: {\n        paddingLeft: 8,\n        paddingRight: 8\n    },\n    title: {\n        paddingLeft: 12,\n        flex: 1\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit'\n    }\n}))\n\nexport default Nav\n","import React from 'react'\nimport {createMuiTheme} from '@material-ui/core/styles'\nimport {ThemeProvider} from '@material-ui/styles'\nimport {HashRouter, Route} from 'react-router-dom'\nimport Barenpark from './games/barenpark/Barenpark'\nimport FoodChainMagnate from './games/foodChainMagnate/FoodChainMagnate'\nimport Nav from './nav/Nav'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark'\n    }\n})\n\nfunction App() {\n    return (\n        <HashRouter>\n            <ThemeProvider theme={theme}>\n                <div>\n                    <Nav/>\n\n                    {/* TODO: some sort of default route */}\n                    <Route exact path=\"/\"><div/></Route>\n\n                    {/* Game routes*/}\n                    <Route exact path=\"/barenpark\"><Barenpark/></Route>\n                    <Route exact path=\"/foodChainMagnate\"><FoodChainMagnate/></Route>\n                </div>\n            </ThemeProvider>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\nfunction render(Component) {\n    ReactDOM.render(<Component/>, document.getElementById('root'))\n}\n\nrender(App)\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n        const next = require('./App').default\n        render(next)\n    })\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}