{"version":3,"sources":["nav/github.svg","shared/TitleContext.js","shared/Tabs.js","shared/LabelValueDisplay.js","games/barenpark/setup/playerData.js","games/barenpark/setup/Setup.js","games/barenpark/Barenpark.js","games/foodChainMagnate/calc/UnitPrices.js","games/foodChainMagnate/calc/Profit.js","games/foodChainMagnate/calc/BulkCalc.js","games/foodChainMagnate/calc/Calc.js","games/foodChainMagnate/milestones/milestoneData.js","games/foodChainMagnate/milestones/Milestone.js","games/foodChainMagnate/milestones/Milestones.js","games/foodChainMagnate/setup/playerData.js","games/foodChainMagnate/setup/Setup.js","games/foodChainMagnate/FoodChainMagnate.js","nav/ExpandIcon.js","nav/SiteSearch.js","nav/Nav.js","shared/TitleContextProvider.js","App.js","index.js","serviceWorker.js"],"names":["module","exports","React","createContext","useStyles","makeStyles","appBar","display","flexDirection","maxHeight","spacer","flex","toolbar","minHeight","title","wordWrap","Tabs","tabs","classes","useState","tabValue","setTabValue","useContext","TitleContext","setTitle","clearTitle","useEffect","Fragment","AppBar","position","color","className","value","onChange","event","variant","scrollButtons","map","index","label","Tab","key","content","subheading","marginTop","LabelValueDisplay","Typography","2","toilets","playgrounds","foodStreets","rivers","animalHouses","bearStatues","monorailTowers","monorailCars","grizzlyToilets","grizzlyAnimalHouses","grizzlyBearStatues","3","4","card","margin","maxWidth","select","marginBottom","switch","marginRight","row","col","Setup","players","setPlayers","monorails","setMonorails","grizzlies","setGrizzlies","data","playerData","CardHeader","CardContent","FormGroup","FormControl","InputLabel","htmlFor","Select","target","input","Input","id","Object","keys","count","MenuItem","FormControlLabel","control","Switch","checked","Barenpark","UnitPrices","MenuProps","MenuListProps","style","Array","v","i","unitPrice","theme","container","width","right","subheader","textAlign","palette","text","secondary","dollars","fontSize","fontWeight","useTheme","Profit","defaultState","normalSales","gardenSales","marketingBonuses","cfo","field","BulkCalc","setUnitPrice","setNormalSales","setGardenSales","setMarketingBonuses","setCfo","cfoMultiplier","normalProfit","gardenProfit","marketingProfit","profit","Math","ceil","TextField","name","type","CardActions","Button","onClick","bonusItemsSold","garden","itemsSold","Calc","setBonusItemsSold","setGarden","setItemsSold","salesError","bonusError","salesDollars","bonusDollars","gardenMultiplier","error","FormHelperText","originalMilestoneData","alternateMilestoneData","maxRoundTwo","milestone","height","userSelect","cursor","border","borderRadius","textTransform","bottom","checkmark","left","x","Milestone","backgroundColor","localStorageKey","milestoneTypes","Milestones","getDataArray","milestoneType","oldStorageData","localStorage","getItem","parsedData","JSON","parse","milestones","ex","console","warn","removeItem","setMilestones","stringify","setItem","updateMilestones","newMilestones","milestoneData","newValue","RadioGroup","group","newType","Radio","mapSize","employees","billboards","reserve","5","FoodChainMagnate","closed","transition","transform","primary","open","ExpandIcon","SiteSearch","searchOpen","setSearchOpen","Tooltip","IconButton","drawer","paddingLeft","paddingRight","nested","spacing","link","textDecoration","Nav","expandedMenu","setExpandedMenu","drawerOpen","setDrawerOpen","openDrawer","closeDrawer","handleExpand","Toolbar","menuButton","href","alt","src","githubSvg","SwipeableDrawer","onOpen","onClose","List","ListItem","button","ListItemIcon","ListItemText","Collapse","in","timeout","to","defaultTitle","TitleContextProvider","children","useCallback","useMemo","Provider","createMuiTheme","App","Component","ThemeProvider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18136b7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.7337e417.svg\";","import React from 'react'\n\nexport default React.createContext({})\n","import React, {useContext, useEffect, useState} from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport AppBar from '@material-ui/core/AppBar'\nimport MuiTabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport TitleContext from './TitleContext'\n\nfunction Tabs({tabs, title}) {\n    const classes = useStyles()\n    const [tabValue, setTabValue] = useState(0)\n    const handleChange = (event, value) => setTabValue(value)\n\n    const {setTitle, clearTitle} = useContext(TitleContext)\n    useEffect(() => {\n        setTitle(title)\n        return () => clearTitle()\n    })\n\n    return (\n        <React.Fragment>\n            {/* Tabs */}\n            <AppBar position='static' color='default' className={classes.appBar}>\n                <MuiTabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    variant='scrollable'\n                    scrollButtons='auto'\n                >\n                    {tabs.map(({label}, index) => <Tab key={index} label={label}/>)}\n                </MuiTabs>\n            </AppBar>\n\n            {/* Content area */}\n            {tabs.map(({content}, index) => tabValue === index ? content : null)}\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles({\n    appBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        maxHeight: 48\n    },\n    spacer: {\n        flex: 1\n    },\n    toolbar: {\n        minHeight: 48\n    },\n    title: {\n        wordWrap: 'none'\n    }\n})\n\nexport default Tabs\n","import {makeStyles} from '@material-ui/styles'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nfunction LabelValueDisplay({label, value}) {\n    const classes = useStyles()\n    return (\n        <div className={classes.subheading}>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {label}\n            </Typography>\n            <Typography variant=\"body2\">\n                {value}\n            </Typography>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    subheading: {\n        marginTop: 16\n    }\n})\n\nexport default LabelValueDisplay\n","export default {\n    2: {\n        toilets: 10,\n        playgrounds: 10,\n        foodStreets: 8,\n        rivers: 8,\n        animalHouses: '2, 4, 6',\n        bearStatues: 'Evens; 2 - 16',\n        monorailTowers: 14,\n        monorailCars: '2 each; 10, 8, 6, 5, 4, 3',\n        grizzlyToilets: 18,\n        grizzlyAnimalHouses: '2, 4, 6, 8',\n        grizzlyBearStatues: 'Evens; 2 - 20'\n    },\n    3: {\n        toilets: 10,\n        playgrounds: 10,\n        foodStreets: 12,\n        rivers: 12,\n        animalHouses: '2 - 6',\n        bearStatues: '3 - 14',\n        monorailTowers: 21,\n        monorailCars: '3 each; 10, 8, 6, 5, 4, 3',\n        grizzlyToilets: 18,\n        grizzlyAnimalHouses: '2 - 7',\n        grizzlyBearStatues: '3 - 17'\n    },\n    4: {\n        toilets: 10,\n        playgrounds: 10,\n        foodStreets: 16,\n        rivers: 16,\n        animalHouses: '1 - 7',\n        bearStatues: '1 - 16',\n        monorailTowers: 28,\n        monorailCars: '4 each; 10, 8, 6, 5, 4, 3',\n        grizzlyToilets: 18,\n        grizzlyAnimalHouses: '1 - 8',\n        grizzlyBearStatues: '1 - 20'\n    }\n}\n","import FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport React, {useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport LabelValueDisplay from '../../../shared/LabelValueDisplay'\nimport playerData from './playerData'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Setup() {\n    const classes = useStyles()\n    const [players, setPlayers] = useState(2)\n    const [monorails, setMonorails] = useState(false)\n    const [grizzlies, setGrizzlies] = useState(false)\n    const data = playerData[players]\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Setup Reference\"/>\n            <CardContent>\n                <FormGroup>\n                    {/* Players */}\n                    <FormControl>\n                        <InputLabel htmlFor=\"players\">Players</InputLabel>\n                        <Select\n                            className={classes.select}\n                            value={players}\n                            onChange={event => setPlayers(event.target.value)}\n                            input={<Input id=\"players\"/>}\n                        >\n                            {Object.keys(playerData).map(count =>\n                                <MenuItem key={count} value={count}>{`${count} players`}</MenuItem>\n                            )}\n                        </Select>\n                    </FormControl>\n\n                    <div className={classes.row}>\n                        {/* Monorails */}\n                        <FormControlLabel\n                            className={classes.switch}\n                            label=\"Monorails\"\n                            control={\n                                <Switch\n                                    checked={monorails}\n                                    onChange={event => setMonorails(event.target.checked)}\n                                />\n                            }\n                        />\n\n                        {/* Grizzlies */}\n                        <FormControlLabel\n                            className={classes.switch}\n                            label=\"Grizzlies\"\n                            control={\n                                <Switch\n                                    checked={grizzlies}\n                                    onChange={event => setGrizzlies(event.target.checked)}\n                                />\n                            }\n                        />\n                    </div>\n\n                    <div className={classes.row}>\n                        <div className={classes.col}>\n                            <LabelValueDisplay label='Toilets' value={grizzlies ? data.grizzlyToilets : data.toilets}/>\n                            <LabelValueDisplay label='Playgrounds' value={data.playgrounds}/>\n                            <LabelValueDisplay\n                                label='Animal Houses'\n                                value={grizzlies ? data.grizzlyAnimalHouses : data.animalHouses}\n                            />\n                            {monorails && <LabelValueDisplay label='Monorail Towers' value={data.monorailTowers}/>}\n                        </div>\n\n                        <div className={classes.col}>\n                            <LabelValueDisplay label='Food Streets' value={data.foodStreets}/>\n                            <LabelValueDisplay label='Rivers' value={data.rivers}/>\n                            <LabelValueDisplay\n                                label='Bear Statues'\n                                value={grizzlies ? data.grizzlyBearStatues : data.bearStatues}\n                            />\n                            {monorails && <LabelValueDisplay label='Monorail Cars' value={data.monorailCars}/>}\n                        </div>\n                    </div>\n                </FormGroup>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 350\n    },\n    subheading: {\n        marginTop: 16\n    },\n    select: {\n        marginBottom: 8\n    },\n    switch: {\n        marginRight: 32\n    },\n    row: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    col: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginRight: 24\n    }\n})\n\nexport default Setup\n","import React from 'react'\nimport Tabs from '../../shared/Tabs'\nimport Setup from './setup/Setup'\n\nfunction Barenpark() {\n    const tabs = [\n        {label: 'Setup', content: <Setup/>},\n        {label: 'Achievements', content: <div/>},\n    ]\n    return <Tabs title={'Bärenpark'} tabs={tabs}/>\n\n}\n\nexport default Barenpark\n","import React from 'react'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nfunction UnitPrices({className, onChange, value}) {\n    return (\n        <FormControl className={className}>\n            <InputLabel htmlFor=\"unitPrice\">Unit Price</InputLabel>\n            <Select\n                value={value}\n                onChange={onChange}\n                input={<Input id=\"unitPrice\"/>}\n                MenuProps={{\n                    MenuListProps: {\n                        style: {\n                            maxHeight: 256\n                        }\n                    }\n                }}\n            >\n                {[...new Array(26)].map((v, i) => i - 5).map(unitPrice =>\n                    <MenuItem key={unitPrice} value={unitPrice}>{`$${unitPrice}`}</MenuItem>)\n                }\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default UnitPrices\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Profit({value = 0}) {\n    const classes = useStyles()\n    return (\n        <div className={classes.container}>\n            <div className={classes.subheader}>Profit</div>\n            <div className={classes.dollars}>{`$${value}`}</div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        marginRight: 16,\n        marginBottom: 16,\n        width: '100%',\n        display: 'inline-block',\n        right: 0\n    },\n    subheader: {\n        textAlign: 'right',\n        color: theme.palette.text.secondary\n    },\n    dollars: {\n        fontSize: '38px',\n        fontWeight: 'bold',\n        color: 'darkgreen',\n        textAlign: 'right'\n    }\n}), {useTheme: true})\n\nexport default Profit\n","import React, {useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport UnitPrices from './UnitPrices'\nimport Profit from './Profit'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction BulkCalc() {\n    const classes = useStyles()\n    const [unitPrice, setUnitPrice] = useState(defaultState.unitPrice)\n    const [normalSales, setNormalSales] = useState(defaultState.normalSales)\n    const [gardenSales, setGardenSales] = useState(defaultState.gardenSales)\n    const [marketingBonuses, setMarketingBonuses] = useState(defaultState.marketingBonuses)\n    const [cfo, setCfo] = useState(defaultState.cfo)\n\n    const cfoMultiplier = cfo ? 1.5 : 1\n    const normalProfit = normalSales * unitPrice\n    const gardenProfit = gardenSales * unitPrice * 2\n    const marketingProfit = (marketingBonuses * 5)\n    const profit = Math.ceil(cfoMultiplier * (normalProfit + gardenProfit + marketingProfit))\n\n    const reset = () => {\n        setUnitPrice(defaultState.unitPrice)\n        setNormalSales(defaultState.normalSales)\n        setGardenSales(defaultState.gardenSales)\n        setMarketingBonuses(defaultState.marketingBonuses)\n        setCfo(defaultState.cfo)\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Bulk Sale Calculator\"/>\n            <CardContent>\n                <FormGroup>\n                    {/* Unit Price */}\n                    <UnitPrices\n                        className={classes.field}\n                        value={unitPrice}\n                        onChange={event => setUnitPrice(event.target.value)}\n                    />\n\n                    {/* Normal Sales */}\n                    <TextField\n                        className={classes.field}\n                        name=\"normalSales\"\n                        label=\"Normal Sales\"\n                        value={normalSales}\n                        type=\"number\"\n                        onChange={event => setNormalSales(event.target.value)}\n                    />\n\n                    {/* Garden Sales */}\n                    <TextField\n                        className={classes.field}\n                        name=\"gardenSales\"\n                        label=\"Garden Sales\"\n                        value={gardenSales}\n                        type=\"number\"\n                        onChange={event => setGardenSales(event.target.value)}\n                    />\n\n                    {/* Marketing Bonuses */}\n                    <TextField\n                        className={classes.field}\n                        name=\"marketingBonuses\"\n                        label=\"Marketing Bonuses\"\n                        value={marketingBonuses}\n                        type=\"number\"\n                        onChange={event => setMarketingBonuses(event.target.value)}\n                    />\n\n                    {/* CFO Bonus */}\n                    <FormControlLabel\n                        className={classes.switch}\n                        label=\"CFO Bonus\"\n                        control={\n                            <Switch\n                                checked={cfo}\n                                onChange={event => setCfo(event.target.checked)}\n                            />\n                        }\n                    />\n                </FormGroup>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n                <Profit value={profit}/>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst defaultState = {\n    unitPrice: 10,\n    normalSales: 0,\n    gardenSales: 0,\n    marketingBonuses: 0,\n    cfo: false\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 275\n    },\n    field: {\n        marginBottom: 24\n    },\n    switch: {\n        marginTop: -6\n    }\n})\n\nexport default BulkCalc\n","import React, {useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Select from '@material-ui/core/Select'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport UnitPrices from './UnitPrices'\nimport Profit from './Profit'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Calc() {\n    const classes = useStyles()\n    const [bonusItemsSold, setBonusItemsSold] = useState(defaultState.bonusItemsSold)\n    const [cfo, setCfo] = useState(defaultState.cfo)\n    const [garden, setGarden] = useState(defaultState.garden)\n    const [itemsSold, setItemsSold] = useState(defaultState.itemsSold)\n    const [unitPrice, setUnitPrice] = useState(defaultState.unitPrice)\n\n    const salesError = !garden && itemsSold > 3\n    const bonusError = bonusItemsSold > itemsSold\n\n    const salesDollars = unitPrice * itemsSold\n    const bonusDollars = bonusItemsSold * 5\n    const gardenMultiplier = garden ? 2 : 1\n    const cfoMultiplier = cfo ? 1.5 : 1\n    const profit = Math.ceil(((salesDollars * gardenMultiplier) + bonusDollars) * cfoMultiplier)\n\n    const reset = () => {\n        setBonusItemsSold(defaultState.bonusItemsSold)\n        setCfo(defaultState.cfo)\n        setGarden(defaultState.garden)\n        setItemsSold(defaultState.itemsSold)\n        setUnitPrice(defaultState.unitPrice)\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Dinnertime Calculator\"/>\n            <CardContent>\n                <FormGroup>\n                    {/*Unit Price */}\n                    <UnitPrices\n                        className={classes.select}\n                        value={unitPrice}\n                        onChange={event => setUnitPrice(event.target.value)}\n                    />\n\n                    {/* Items Sold */}\n                    <FormControl className={classes.select} error={salesError}>\n                        <InputLabel htmlFor=\"sales\">Items Sold</InputLabel>\n                        <Select\n                            value={itemsSold}\n                            onChange={event => setItemsSold(event.target.value)}\n                            input={<Input id=\"sales\"/>}\n                        >\n                            {[1, 2, 3, 4, 5].map(count =>\n                                <MenuItem key={count} value={count}>{`${count} item(s) sold`}</MenuItem>)\n                            }\n                        </Select>\n                        {\n                            salesError &&\n                            <FormHelperText>Items sold must be at most 3 for regular house.</FormHelperText>\n                        }\n                    </FormControl>\n\n                    {/* Bonus Sales */}\n                    <FormControl className={classes.select} error={bonusError}>\n                        <InputLabel htmlFor=\"bonus\">Marketing Bonuses</InputLabel>\n                        <Select\n                            value={bonusItemsSold}\n                            onChange={event => setBonusItemsSold(event.target.value)}\n                            input={<Input id=\"bonus\"/>}\n                        >\n                            {[0, 1, 2, 3, 4, 5].map(count =>\n                                <MenuItem key={count} value={count}>{`${count} bonus(es)`}</MenuItem>)\n                            }\n                        </Select>\n                        {\n                            bonusError &&\n                            <FormHelperText>Marketing bonuses may not exceed items sold.</FormHelperText>\n                        }\n                    </FormControl>\n\n                    {/* Garden House */}\n                    <FormControlLabel\n                        label=\"Garden House\"\n                        control={\n                            <Switch\n                                checked={garden}\n                                onChange={event => setGarden(event.target.checked)}\n                            />\n                        }\n                    />\n\n                    {/* CFO Bonus */}\n                    <FormControlLabel\n                        label=\"CFO Bonus\"\n                        control={\n                            <Switch\n                                checked={cfo}\n                                onChange={event => setCfo(event.target.checked)}\n                            />\n                        }\n                    />\n                </FormGroup>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n                <Profit value={profit}/>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst defaultState = {\n    bonusItemsSold: 0,\n    cfo: false,\n    garden: false,\n    itemsSold: 1,\n    unitPrice: 10\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 275\n    },\n    select: {\n        marginBottom: 24\n    }\n})\n\nexport default Calc\n","export const originalMilestoneData = [\n    {color: '#AF95C2', title: 'to hire 3 people in 1 turn', text: '+2 Management Trainees.'},\n    {color: '#BDB6B3', title: 'to train someone', text: '$15 discount on salaries.'},\n    {color: '#98C2C9', title: 'billboard placed', text: 'No salaries for marketeers; Eternal marketing.'},\n    {color: '#AF95C2', title: 'to throw away drink/food', text: 'Get a freezer that stores 10 items (drink or food).'},\n    {color: '#95A968', title: 'burger produced', text: '+1 Burger Cook.'},\n    {color: '#98C2C9', title: 'burger marketed', text: '+$5 for every burger sold.'},\n    {color: '#AF95C2', title: 'waitress played', text: 'Each waitress +$2.'},\n    {color: '#95A968', title: 'pizza produced', text: '+1 Pizza Cook.'},\n    {color: '#98C2C9', title: 'pizza marketed', text: '+$5 for every pizza sold.'},\n    {color: '#AF95C2', title: 'to have $20', text: 'May see bank reserve cards.'},\n    {color: '#A9CB94', title: 'Errand Boy played', text: 'All buyers get +1 drink from each source.'},\n    {color: '#98C2C9', title: 'drink marketed', text: '+$5 for every drink sold.'},\n    {color: '#AF95C2', title: 'to have $100', text: 'Your CEO counts as CFO (+50% to cash earned). May not have CFO.'},\n    {color: '#A9CB94', title: 'Cart Operator played', text: 'Buyers get range +1.'},\n    {color: '#98C2C9', title: 'airplane campaign', text: 'Count +2 open slots when determining order of play.'},\n    {color: '#EAA791', title: 'to lower prices', text: 'Price -$1.'},\n    {color: '#BDB6B3', title: 'to pay $20 or more in salaries', text: 'May use multiple trainers on the same person.'},\n    {color: '#98C2C9', title: 'radio campaign', text: 'Your radios market 2 goods per turn instead of 1.'},\n    {color: '#cc0000', title: 'demand fulfulled by someone else', text: 'Range -1.'}\n]\nexport const alternateMilestoneData = [\n    {color: '#98C2C9', title: 'marketeer used', text: '$5 for every good marketed; Range -2.', maxRoundTwo: true},\n    {color: '#98C2C9', title: 'marketing trainee used', text: '+1 Kitchen Trainee and +1 Errand Boy.'},\n    {color: '#98C2C9', title: 'campaign manager used', text: 'May place second mailbox or billboard advertising same product and duration (only once).'},\n    {color: '#98C2C9', title: 'brand manager used', text: 'May place 2 different goods on first plane. Choose priority of goods when placed.'},\n    {color: '#98C2C9', title: 'brand director played', text: 'Your radio is permanent.'},\n    {color: '#EAA791', title: 'burger sold', text: 'CEO always has 4 slots (regardless of reserve cards).'},\n    {color: '#EAA791', title: 'pizza sold', text: 'Place radio tower on tile of sale (house) advertising pizza for two turns.'},\n    {color: '#EAA791', title: 'lemonade sold', text: 'Any employee can be trained on the job, preserving color.'},\n    {color: '#EAA791', title: 'beer sold', text: 'May pay salary with food or drink.'},\n    {color: '#EAA791', title: 'coke sold', text: 'Get a freezer that stores 10 items (drink or food).'},\n    {color: '#BDB6B3', title: 'recruiting girl played', text: 'Get a free executive vice president; Pay no salary for him.', maxRoundTwo: true},\n    {color: '#BDB6B3', title: 'trainer played', text: '+1 trainer; No longer need to fire employees if broke.', maxRoundTwo: true},\n    {color: '#BDB6B3', title: 'discount manager played', text: 'If you discount by -$3 or more, $100 is removed from the bank.'},\n    {color: '#AF95C2', title: 'house built', text: 'May use multiple trainers on the same person.'},\n    {color: '#934a34', title: 'new restaurant built', text: 'Place permanent mailbox in restaurant area.'},\n    {color: '#AF95C2', title: 'waitress played', text: 'Your salaries are $3 each.'},\n    {color: '#A9CB94', title: 'cart operator played', text: 'Double amount of drinks hauled by cart/truck/zeppelin.'},\n    {color: '#cc0000', title: 'demand fulfulled by someone else', text: 'Range -1.'}\n]\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Milestone({index, milestone, onChange, value}) {\n    const classes = useStyles()\n    const {color, title, text, maxRoundTwo} = milestone\n\n    const handleClick = () => {\n        let nextValue\n        if (value === 'available') nextValue = 'mine'\n        else if (value === 'mine') nextValue = 'unavailable'\n        else nextValue = 'available'\n\n        return onChange(index, nextValue)\n    }\n\n    return (\n        <div\n            className={classes.milestone}\n            style={{backgroundColor: color}}\n            onClick={handleClick}\n        >\n            {value === 'mine' && <div className={classes.checkmark}>✓</div>}\n            {value === 'unavailable' && <div className={classes.x}>✗</div>}\n            <div className={classes.container}>\n                <div className={classes.title}>First {title}</div>\n                <div className={classes.text}>{text}</div>\n                {maxRoundTwo && <div className={classes.maxRoundTwo}>Remove after<br/>round two</div>}\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    milestone: {\n        margin: 8,\n        width: 155,\n        height: 155,\n        userSelect: 'none',\n        cursor: 'pointer',\n        border: '1px solid black',\n        borderRadius: 10\n    },\n    container: {\n        margin: 6\n    },\n    title: {\n        textAlign: 'center',\n        fontWeight: 600,\n        textTransform: 'uppercase',\n        marginBottom: 12,\n        color: '#000'\n    },\n    text: {\n        textAlign: 'center',\n        fontSize: 'small',\n        color: '#000'\n    },\n    maxRoundTwo: {\n        width: 145,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 'small',\n        color: '#f00',\n        position: 'absolute',\n        bottom: 4\n    },\n    checkmark: {\n        fontSize: 'xx-large',\n        color: '#0f0',\n        position: 'absolute',\n        left: 2,\n        bottom: 0\n    },\n    x: {\n        fontSize: 'xx-large',\n        color: '#f00',\n        position: 'absolute',\n        left: 4,\n        bottom: 0\n    }\n})\n\nexport default Milestone\n","import FormControlLabel from '@material-ui/core/FormControlLabel'\nimport React, {useEffect, useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Button from '@material-ui/core/Button'\nimport Masonry from 'react-masonry-component'\nimport {originalMilestoneData, alternateMilestoneData} from './milestoneData'\nimport Milestone from './Milestone'\nimport {makeStyles} from '@material-ui/styles'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\n\nfunction Milestones() {\n    const classes = useStyles()\n\n    const getDataArray = (type = milestoneType) => {\n        const data = type === 'original' ? originalMilestoneData : alternateMilestoneData\n        return data.map(() => 'available')\n    }\n\n    const [{milestones, milestoneType}, setMilestones] = useState(() => {\n        try {\n            const oldStorageData = localStorage.getItem(localStorageKey)\n            const parsedData = JSON.parse(oldStorageData)\n            if (parsedData && parsedData.milestones && parsedData.milestoneType) {\n                return parsedData\n            }\n        } catch (ex) {\n            console.warn('Error loading local storage data: ', ex)\n            localStorage.removeItem(localStorageKey)\n        }\n        return {\n            milestones: getDataArray('original'),\n            milestoneType: 'original'\n        }\n    })\n\n    useEffect(() => {\n        const data = JSON.stringify({milestones, milestoneType})\n        localStorage.setItem(localStorageKey, data)\n    }, [milestones, milestoneType])\n\n    const reset = () => {\n        const newMilestones = getDataArray()\n        setMilestones({milestones: newMilestones, milestoneType})\n\n        const newValue = JSON.stringify({\n            milestones: newMilestones,\n            milestoneType\n        })\n        localStorage.setItem(localStorageKey, newValue)\n    }\n\n    const updateMilestones = (index, value) => {\n        const newMilestones = [...milestones]\n        newMilestones[index] = value\n        setMilestones({milestones: newMilestones, milestoneType})\n    }\n\n    const handleMilestoneSetChange = event => {\n        const newType = event.target.value\n        if (newType !== milestoneType) {\n            // set defaults\n            setMilestones({\n                milestones: getDataArray(newType),\n                milestoneType: newType\n            })\n        }\n    }\n\n    const milestoneData = milestoneType === 'original' ? originalMilestoneData : alternateMilestoneData\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Milestone Tracker\"/>\n            <CardContent>\n                <Masonry>\n                    {milestones.map((value, key) =>\n                        <Milestone\n                            key={key}\n                            index={key}\n                            milestone={milestoneData[key]}\n                            value={value}\n                            onChange={updateMilestones}\n                        />\n                    )}\n                </Masonry>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n                <div className={classes.spacer}/>\n                <RadioGroup\n                    name=\"milestoneType\"\n                    className={classes.group}\n                    value={milestoneType}\n                    onChange={handleMilestoneSetChange}\n                >\n                    <div className={classes.milestoneTypes}>\n                        <FormControlLabel\n                            value=\"original\"\n                            control={<Radio/>}\n                            label=\"Original\"\n                        />\n                        <FormControlLabel\n                            value=\"alternate\"\n                            control={<Radio/>}\n                            label=\"Alternate\"\n                        />\n                    </div>\n                </RadioGroup>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport const localStorageKey = 'milestones'\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 900\n    },\n    spacer: {\n        display: 'flex',\n        flex: 1\n    },\n    milestoneTypes: {\n        display: 'flex',\n        flexDirection: 'row'\n    }\n})\n\nexport default Milestones\n","export default {\n    2: {\n        mapSize: '3 x 3',\n        employees: '1',\n        billboards: '#2, #3, #12, #15, #16',\n        reserve: '$100'\n    },\n    3: {\n        mapSize: '3 x 4',\n        employees: '1',\n        billboards: '#2, #3, #15, #16',\n        reserve: '$150'\n    },\n    4: {\n        mapSize: '4 x 4',\n        employees: '2',\n        billboards: '#3, #16',\n        reserve: '$200'\n    },\n    5: {\n        mapSize: '4 x 5',\n        employees: '3',\n        billboards: 'None',\n        reserve: '$250'\n    }\n}\n","import React, {useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport LabelValueDisplay from '../../../shared/LabelValueDisplay'\nimport playerData from './playerData'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Setup() {\n    const classes = useStyles()\n    const [players, setPlayers] = useState(2)\n    const data = playerData[players]\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Setup Reference\"/>\n            <CardContent>\n                <FormGroup>\n                    {/* Players */}\n                    <FormControl>\n                        <InputLabel htmlFor=\"players\">Players</InputLabel>\n                        <Select\n                            value={players}\n                            onChange={event => setPlayers(event.target.value)}\n                            input={<Input id=\"players\"/>}\n                        >\n                            {Object.keys(playerData).map(count =>\n                                <MenuItem key={count} value={count}>{`${count} players`}</MenuItem>\n                            )}\n                        </Select>\n                    </FormControl>\n\n                    <LabelValueDisplay label='Map Size' value={data.mapSize}/>\n                    <LabelValueDisplay label='1x Employees' value={data.employees}/>\n                    <LabelValueDisplay label='Billboards Removed' value={data.billboards}/>\n                    <LabelValueDisplay label='Reserve' value={data.reserve}/>\n                </FormGroup>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 225\n    }\n})\n\nexport default Setup\n","import React from 'react'\nimport Tabs from '../../shared/Tabs'\nimport BulkCalc from './calc/BulkCalc'\nimport Calc from './calc/Calc'\nimport Milestones from './milestones/Milestones'\nimport Setup from './setup/Setup'\n\nfunction FoodChainMagnate() {\n    const tabs = [\n        {label: 'Simple Sales', content: <Calc/>},\n        {label: 'Bulk Sales', content: <BulkCalc/>},\n        {label: 'Milestones', content: <Milestones/>},\n        {label: 'Setup', content: <Setup/>}\n    ]\n    return <Tabs title={'Food Chain Magnate'} tabs={tabs}/>\n}\n\nexport default FoodChainMagnate\n","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\n\nfunction ExpandIcon({open}) {\n    const classes = useStyles()\n    return <ExpandLessIcon className={open ? classes.open : classes.closed}/>\n}\n\nconst useStyles = makeStyles(theme => ({\n    closed: {\n        transition: 'transform .2s',\n        transform: 'rotate(180deg)',\n        color: `${theme.palette.text.primary} !important`\n    },\n    open: {\n        transition: 'transform .2s',\n        transform: 'rotate(0deg)',\n        color: `${theme.palette.text.primary} !important`\n    }\n}))\n\nexport default ExpandIcon\n","import React, {useState} from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nfunction SiteSearch() {\n    const [searchOpen, setSearchOpen] = useState(false)\n    const toggleSearch = () => setSearchOpen(!searchOpen)\n\n    return (\n        <Tooltip title='Site Search'>\n            <IconButton onClick={toggleSearch}>\n                <SearchIcon/>\n            </IconButton>\n        </Tooltip>\n    )\n}\n\nexport default SiteSearch\n","import React, {useContext, useState} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport TitleContext from '../shared/TitleContext'\nimport ExpandIcon from './ExpandIcon'\nimport githubSvg from './github.svg'\nimport {makeStyles} from '@material-ui/styles'\nimport {Link} from 'react-router-dom'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ExtensionIcon from '@material-ui/icons/Extension'\nimport BuildIcon from '@material-ui/icons/Build'\nimport Collapse from '@material-ui/core/Collapse'\nimport SiteSearch from './SiteSearch'\n\nfunction Nav() {\n    const classes = useStyles()\n    const {title} = useContext(TitleContext)\n    const [expandedMenu, setExpandedMenu] = useState(null)\n    const [drawerOpen, setDrawerOpen] = useState(false)\n\n    const openDrawer = () => setDrawerOpen(true)\n    const closeDrawer = () => setDrawerOpen(false)\n\n    const handleExpand = value => () => setExpandedMenu(expandedMenu === value ? null : value)\n\n    return (\n        <React.Fragment>\n            <AppBar position='static'>\n                <Toolbar className={classes.toolbar}>\n                    {/* Menu button */}\n                    <IconButton className={classes.menuButton} onClick={openDrawer}>\n                        <MenuIcon/>\n                    </IconButton>\n\n                    {/* Title bar */}\n                    <Typography variant='h6' className={classes.title}>\n                        {title}\n                    </Typography>\n\n                    {/* Search */}\n                    <SiteSearch/>\n\n                    {/* Top right icons */}\n                    <Tooltip title='Contribute on GitHub!'>\n                        <IconButton target='_blank' href='https://github.com/NiXXeD/bghelper'>\n                            <img alt='github link' width='24' height='24' src={githubSvg}/>\n                        </IconButton>\n                    </Tooltip>\n                </Toolbar>\n            </AppBar>\n\n            {/* Left Drawer*/}\n            <SwipeableDrawer open={drawerOpen} onOpen={openDrawer} onClose={closeDrawer} className={classes.drawer}>\n                <List>\n                    {/* Games list */}\n                    <ListItem button onClick={handleExpand('games')}>\n                        <ListItemIcon><ExtensionIcon/></ListItemIcon>\n                        <ListItemText primary='Games'/>\n                        <ExpandIcon open={expandedMenu === 'games'}/>\n                    </ListItem>\n                    <Collapse in={expandedMenu === 'games'} timeout='auto'>\n                        <Link className={classes.link} to='/barenpark'>\n                            <ListItem className={classes.nested} button onClick={closeDrawer}>\n                                <ListItemText primary='Bärenpark'/>\n                            </ListItem>\n                        </Link>\n                        <Link className={classes.link} to='/foodChainMagnate'>\n                            <ListItem className={classes.nested} button onClick={closeDrawer}>\n                                <ListItemText primary='Food Chain Magnate'/>\n                            </ListItem>\n                        </Link>\n                    </Collapse>\n\n                    {/* Utilities */}\n                    <ListItem button onClick={handleExpand('utils')}>\n                        <ListItemIcon><BuildIcon/></ListItemIcon>\n                        <ListItemText primary='Utilities'/>\n                        <ExpandIcon open={expandedMenu === 'utils'}/>\n                    </ListItem>\n                    <Collapse in={expandedMenu === 'utils'} timeout='auto'>\n                        <ListItem className={classes.nested} button onClick={closeDrawer}>\n                            <ListItemText primary='TBD'/>\n                        </ListItem>\n                    </Collapse>\n                </List>\n            </SwipeableDrawer>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: 300\n    },\n    toolbar: {\n        paddingLeft: 8,\n        paddingRight: 8\n    },\n    title: {\n        paddingLeft: 12,\n        flex: 1\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit'\n    }\n}))\n\nexport default Nav\n","import React, {useCallback, useMemo, useState} from 'react'\nimport TitleContext from './TitleContext'\n\nfunction TitleContextProvider({children}) {\n    const [title, setTitle] = useState(defaultTitle)\n    const clearTitle = useCallback(() => setTitle(defaultTitle), [])\n    const value = useMemo(() => ({title, setTitle, clearTitle}), [title, clearTitle])\n\n    return (\n        <TitleContext.Provider value={value}>\n            {children}\n        </TitleContext.Provider>\n    )\n}\n\nconst defaultTitle = 'Board Game Helper'\n\nexport default TitleContextProvider\n","import React from 'react'\nimport {createMuiTheme} from '@material-ui/core/styles'\nimport {ThemeProvider} from '@material-ui/styles'\nimport {HashRouter, Route} from 'react-router-dom'\nimport Barenpark from './games/barenpark/Barenpark'\nimport FoodChainMagnate from './games/foodChainMagnate/FoodChainMagnate'\nimport Nav from './nav/Nav'\nimport TitleContextProvider from './shared/TitleContextProvider'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark'\n    }\n})\n\nfunction App() {\n    return (\n        <HashRouter>\n            <ThemeProvider theme={theme}>\n                <TitleContextProvider>\n                    <div>\n                        <Nav/>\n\n                        {/* TODO: some sort of default route */}\n                        <Route exact path=\"/\">\n                            <div/>\n                        </Route>\n\n                        {/* Game routes*/}\n                        <Route exact path=\"/barenpark\"><Barenpark/></Route>\n                        <Route exact path=\"/foodChainMagnate\"><FoodChainMagnate/></Route>\n                    </div>\n                </TitleContextProvider>\n            </ThemeProvider>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\nfunction render(Component) {\n    ReactDOM.render(<Component/>, document.getElementById('root'))\n}\n\nrender(App)\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n        const next = require('./App').default\n        render(next)\n    })\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}