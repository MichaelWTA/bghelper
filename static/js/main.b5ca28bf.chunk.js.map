{"version":3,"sources":["nav/github.svg","shared/TitleContext.js","shared/Tabs.js","shared/Card.js","shared/Checkbox.js","shared/FlexSpacer.js","shared/LabelValueDisplay.js","games/barenpark/achievements/achievementData.js","games/barenpark/achievements/Achievements.js","shared/Dropdown.js","shared/FlexCol.js","shared/FlexRow.js","games/barenpark/setup/setupData.js","games/barenpark/setup/Setup.js","games/barenpark/Barenpark.js","shared/TextField.js","games/foodChainMagnate/calc/UnitPrices.js","games/foodChainMagnate/calc/Profit.js","games/foodChainMagnate/calc/BulkCalc.js","games/foodChainMagnate/calc/Calc.js","games/foodChainMagnate/milestones/milestoneData.js","games/foodChainMagnate/milestones/Milestone.js","games/foodChainMagnate/milestones/Milestones.js","games/foodChainMagnate/setup/setupData.js","games/foodChainMagnate/setup/Setup.js","games/unearth/Unearth.js","games/games.js","games/foodChainMagnate/FoodChainMagnate.js","games/quacksOfQuedlinberg/QuacksOfQuedlinberg.js","games/rollPlayer/RollPlayer.js","nav/Home.js","nav/ExpandIcon.js","nav/SiteSearch.js","nav/Nav.js","shared/TitleContextProvider.js","App.js","index.js","serviceWorker.js"],"names":["module","exports","React","createContext","useStyles","makeStyles","appBar","display","flexDirection","maxHeight","spacer","flex","toolbar","minHeight","title","wordWrap","Tabs","tabs","classes","useState","tabValue","setTabValue","useContext","TitleContext","setTitle","clearTitle","useEffect","Fragment","AppBar","position","color","className","value","onChange","event","window","dispatchEvent","Event","variant","scrollButtons","map","index","label","Tab","key","content","Box","Card","children","width","maxWidth","style","margin","Checkbox","checked","FormControlLabel","control","Switch","target","FlexSpacer","size","height","subheading","marginTop","LabelValueDisplay","dense","Typography","component","name","type","game","defaultState","baseGame","badNewsBears","variety","Achievements","setBaseGame","setBadNewsBears","setVariety","selected","setSelected","CardHeader","CardContent","a","CardActions","Button","onClick","disabled","picked","pool","achievementData","filter","Math","floor","random","length","splice","pick","every","push","select","marginBottom","Dropdown","items","error","errorText","FormControl","InputLabel","htmlFor","Select","input","Input","id","MenuProps","MenuListProps","MenuItem","FormHelperText","col","FlexCol","row","FlexRow","2","toilets","playgrounds","foodStreets","rivers","animalHouses","bearStatues","monorailTowers","monorailCars","grizzlyToilets","grizzlyAnimalHouses","grizzlyBearStatues","players","3","4","playersMenuItems","Object","keys","setupData","Setup","setPlayers","monorails","setMonorails","grizzlies","setGrizzlies","data","FormGroup","Barenpark","textField","TextField","UnitPrices","props","Array","v","i","theme","container","marginRight","right","subheader","textAlign","palette","text","secondary","dollars","fontSize","fontWeight","Profit","unitPrice","normalSales","gardenSales","marketingBonuses","cfo","BulkCalc","setUnitPrice","setNormalSales","setGardenSales","setMarketingBonuses","setCfo","cfoMultiplier","normalProfit","gardenProfit","marketingProfit","profit","ceil","itemsSoldMenuItems","bonusSalesMenuItems","bonusItemsSold","garden","itemsSold","Calc","setBonusItemsSold","setGarden","setItemsSold","salesError","bonusError","salesDollars","bonusDollars","gardenMultiplier","originalMilestoneData","alternateMilestoneData","maxRoundTwo","milestone","userSelect","cursor","border","borderRadius","textTransform","bottom","checkmark","left","x","Milestone","backgroundColor","localStorageKey","Milestones","getDataArray","milestoneType","oldStorageData","localStorage","getItem","parsedData","JSON","parse","milestones","ex","console","warn","removeItem","setMilestones","stringify","setItem","updateMilestones","newMilestones","milestoneData","newValue","RadioGroup","newType","Radio","mapSize","employees","billboards","reserve","5","card","Unearth","path","Home","closed","transition","transform","primary","open","ExpandIcon","excludedTags","autocomplete","dialogPaper","overflowY","dialogRoot","top","popup","zIndex","SiteSearch","history","useHistory","dialogOpen","setDialogOpen","setValue","openDialog","closeDialog","useRef","handleKeyUp","useCallback","includes","tagName","current","setTimeout","focus","document","addEventListener","removeEventListener","Tooltip","IconButton","Dialog","keepMounted","onClose","paper","root","Autocomplete","autoComplete","autoHightlight","clearOnEscape","options","games","getOptionLabel","option","renderInput","params","fullWidth","inputRef","drawerPaper","paddingLeft","paddingRight","nested","spacing","link","textDecoration","Nav","expandedMenu","setExpandedMenu","drawerOpen","setDrawerOpen","openDrawer","closeDrawer","handleExpand","Toolbar","menuButton","href","alt","src","githubSvg","SwipeableDrawer","onOpen","to","ListItem","button","ListItemIcon","ListItemText","Divider","List","Collapse","in","timeout","defaultTitle","TitleContextProvider","useMemo","Provider","createMuiTheme","App","Component","ThemeProvider","exact","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5ca28bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.7337e417.svg\";","import React from 'react'\n\nexport default React.createContext({})\n","import React, {useContext, useEffect, useState} from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport AppBar from '@material-ui/core/AppBar'\nimport MuiTabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport TitleContext from './TitleContext'\nimport Box from '@material-ui/core/Box'\n\nfunction Tabs({tabs, title}) {\n    const classes = useStyles()\n    const [tabValue, setTabValue] = useState(0)\n    const handleChange = (event, value) => {\n        setTabValue(value)\n\n        // allows masonry components to adjust layout as necessary\n        window.dispatchEvent(new Event('resize'))\n    }\n\n    const {setTitle, clearTitle} = useContext(TitleContext)\n    useEffect(() => {\n        setTitle(title)\n        return () => clearTitle()\n    })\n\n    return (\n        <React.Fragment>\n            {/* Tabs */}\n            <AppBar position='static' color='default' className={classes.appBar}>\n                <MuiTabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    variant='scrollable'\n                    scrollButtons='auto'\n                >\n                    {tabs.map(({label}, index) => <Tab key={index} label={label}/>)}\n                </MuiTabs>\n            </AppBar>\n\n            {/* Content area */}\n            {tabs.map(({content}, index) =>\n                <Box key={index} display={tabValue === index ? null : 'none'}>{content}</Box>\n            )}\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles({\n    appBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        maxHeight: 48\n    },\n    spacer: {\n        flex: 1\n    },\n    toolbar: {\n        minHeight: 48\n    },\n    title: {\n        wordWrap: 'none'\n    }\n})\n\nexport default Tabs\n","import React from 'react'\nimport MuiCard from '@material-ui/core/Card'\n\nfunction Card({children, width = 300, maxWidth = width}) {\n    const style = {width, maxWidth, margin: 16}\n    return <MuiCard style={style}>{children}</MuiCard>\n}\n\nexport default Card\n","import React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\nfunction Checkbox({label, checked, onChange}) {\n    return (\n        <FormControlLabel\n            label={label}\n            control={\n                <Switch\n                    checked={checked}\n                    onChange={({target}) => onChange(target.checked)}\n                />\n            }\n        />\n    )\n}\n\nexport default Checkbox\n","import React from 'react'\n\nfunction FlexSpacer({size}) {\n    const style = size ? {height: size, width: size} : {flex: 1}\n    return (\n        <div style={style}/>\n    )\n}\n\nexport default FlexSpacer\n","import {makeStyles} from '@material-ui/styles'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nfunction LabelValueDisplay({label, value, dense}) {\n    const classes = useStyles()\n    return (\n        <div className={dense ? null : classes.subheading}>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"div\">\n                {label}\n            </Typography>\n            <Typography variant=\"body2\" component=\"div\">\n                {value}\n            </Typography>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    subheading: {\n        marginTop: 16\n    }\n})\n\nexport default LabelValueDisplay\n","export default [\n    // Base Game\n    {name: 'Polar Bears', type: 'animalHouses', game: 'base'},\n    {name: 'Gobi Bears', type: 'animalHouses', game: 'base'},\n    {name: 'Koalas', type: 'animalHouses', game: 'base'},\n    {name: 'Pandas', type: 'animalHouses', game: 'base'},\n    {name: 'Green Areas', type: 'greenTiles', game: 'base'},\n    {name: 'Long Food Street', type: 'greenTiles', game: 'base'},\n    {name: 'Long River', type: 'greenTiles', game: 'base'},\n    {name: 'Enclosures', type: 'enclosures', game: 'base'},\n    {name: 'Animal Houses', type: 'animalHouse', game: 'base'},\n    {name: 'Twice is Nice', type: 'bearStatues', game: 'base'},\n\n    // Bad News Bears\n    {name: 'Construction Freeze', type: 'enclosures', game: 'badNewsBears'},\n    {name: 'Enclosure Planning', type: 'enclosures', game: 'badNewsBears'},\n    {name: 'Toilets Apart', type: 'greenTiles', game: 'badNewsBears'},\n    {name: 'Food Street Connections', type: 'greenTiles', game: 'badNewsBears'},\n    {name: 'Rivers in Corners', type: 'greenTiles', game: 'badNewsBears'},\n    {name: 'Playgrounds with Statues', type: 'bearStatues', game: 'badNewsBears'}\n]\n","import {CardActions} from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport React, {useState} from 'react'\nimport CardContent from '@material-ui/core/CardContent'\nimport Card from '../../../shared/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Checkbox from '../../../shared/Checkbox'\nimport FlexSpacer from '../../../shared/FlexSpacer'\nimport LabelValueDisplay from '../../../shared/LabelValueDisplay'\nimport achievementData from './achievementData'\n\nfunction Achievements() {\n    const [baseGame, setBaseGame] = useState(defaultState.baseGame)\n    const [badNewsBears, setBadNewsBears] = useState(defaultState.badNewsBears)\n    const [variety, setVariety] = useState(defaultState.variety)\n    const [selected, setSelected] = useState(null)\n\n    const handleReset = () => {\n        setBaseGame(defaultState.baseGame)\n        setBadNewsBears(defaultState.badNewsBears)\n        setVariety(defaultState.variety)\n        setSelected(null)\n    }\n\n    const handleRanzomize = () => {\n        let picked = []\n        let pool = [...achievementData]\n            .filter(a => (baseGame && a.game === 'base') || (badNewsBears && a.game === 'badNewsBears'))\n\n        while (picked.length < 3 && pool.length > 0) {\n            // Randomly pick from the list\n            const index = Math.floor(Math.random() * Math.floor(pool.length))\n            const [pick] = pool.splice(index, 1)\n            if (!variety || picked.every(a => a.type !== pick.type)) picked.push(pick)\n        }\n        setSelected(picked)\n    }\n\n    return (\n        <Card>\n            <CardHeader title=\"Achievement Selector\"/>\n            <CardContent>\n                <LabelValueDisplay\n                    dense\n                    label='Options'\n                    value={\n                        <React.Fragment>\n                            <Checkbox label=\"Base Game\" checked={baseGame} onChange={setBaseGame}/>\n                            <Checkbox label=\"Bad News Bears\" checked={badNewsBears} onChange={setBadNewsBears}/>\n                            <Checkbox label=\"Variety\" checked={variety} onChange={setVariety}/>\n                        </React.Fragment>\n                    }\n                />\n\n                <LabelValueDisplay\n                    label='Selected Achievements'\n                    value={\n                        <React.Fragment>\n                            {\n                                !selected &&\n                                <Typography>Press <i>Randomize</i> below to randomly select achievements!</Typography>\n                            }\n\n                            {\n                                selected &&\n                                <React.Fragment>\n                                    {selected.map((a, index) =>\n                                        <LabelValueDisplay key={index} label={`Achievement ${index + 1}`}\n                                                           value={a.name}/>\n                                    )}\n\n                                    <FlexSpacer size={16}/>\n\n                                    <Typography variant='caption' color='textSecondary'>\n                                        Don't forget to remove the lowest value achievement for 2 player games!\n                                    </Typography>\n                                </React.Fragment>\n                            }\n                        </React.Fragment>\n                    }\n                />\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={handleReset}>Reset</Button>\n                <FlexSpacer/>\n                <Button color=\"primary\" disabled={!baseGame && !badNewsBears} onClick={handleRanzomize}>\n                    Randomize\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst defaultState = {\n    baseGame: true,\n    badNewsBears: true,\n    variety: true\n}\n\nexport default Achievements\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport {makeStyles} from '@material-ui/styles'\nimport React from 'react'\n\nfunction Dropdown({label, value, onChange, items, error, errorText}) {\n    const classes = useStyles()\n    return (\n        <FormControl className={classes.select}>\n            <InputLabel htmlFor={label}>{label}</InputLabel>\n            <Select\n                value={value}\n                onChange={({target}) => onChange(target.value)}\n                input={<Input id={label}/>}\n                MenuProps={{\n                    MenuListProps: {\n                        style: {\n                            maxHeight: 256\n                        }\n                    }\n                }}\n            >\n                {items.map(({label, value}, key) => <MenuItem key={key} value={value}>{label}</MenuItem>)}\n            </Select>\n            {error && <FormHelperText error>{errorText}</FormHelperText>}\n        </FormControl>\n    )\n}\n\nconst useStyles = makeStyles({\n    select: {\n        marginBottom: 16\n    }\n})\n\nexport default Dropdown\n","import {makeStyles} from '@material-ui/styles'\nimport React from 'react'\n\nfunction FlexCol({children, width}) {\n    const classes = useStyles()\n    const style = width ? {width} : null\n    return (\n        <div className={classes.col} style={style}>{children}</div>\n    )\n}\n\nconst useStyles = makeStyles({\n    col: {\n        display: 'flex',\n        flexDirection: 'column'\n    }\n})\n\nexport default FlexCol\n","import {makeStyles} from '@material-ui/styles'\nimport React from 'react'\n\nfunction FlexRow({children}) {\n    const classes = useStyles()\n    return (\n        <div className={classes.row}>{children}</div>\n    )\n}\n\nconst useStyles = makeStyles({\n    row: {\n        display: 'flex',\n        flexDirection: 'row'\n    }\n})\n\nexport default FlexRow\n","export default {\n    2: {\n        toilets: 10,\n        playgrounds: 10,\n        foodStreets: 8,\n        rivers: 8,\n        animalHouses: '2, 4, 6',\n        bearStatues: 'Evens; 2 - 16',\n        monorailTowers: 14,\n        monorailCars: '2 each; 10, 8, 6, 5, 4, 3',\n        grizzlyToilets: 18,\n        grizzlyAnimalHouses: '2, 4, 6, 8',\n        grizzlyBearStatues: 'Evens; 2 - 20',\n        players: ['Toilet', 'Playground']\n    },\n    3: {\n        toilets: 10,\n        playgrounds: 10,\n        foodStreets: 12,\n        rivers: 12,\n        animalHouses: '2 - 6',\n        bearStatues: '3 - 14',\n        monorailTowers: 21,\n        monorailCars: '3 each; 10, 8, 6, 5, 4, 3',\n        grizzlyToilets: 18,\n        grizzlyAnimalHouses: '2 - 7',\n        grizzlyBearStatues: '3 - 17',\n        players: ['Toilet', 'Playground', 'Playground']\n    },\n    4: {\n        toilets: 10,\n        playgrounds: 10,\n        foodStreets: 16,\n        rivers: 16,\n        animalHouses: '1 - 7',\n        bearStatues: '1 - 16',\n        monorailTowers: 28,\n        monorailCars: '4 each; 10, 8, 6, 5, 4, 3',\n        grizzlyToilets: 18,\n        grizzlyAnimalHouses: '1 - 8',\n        grizzlyBearStatues: '1 - 20',\n        players: ['Toilet', 'Playground', 'Playground', 'Food Street']\n    }\n}\n","import React, {useState} from 'react'\nimport {CardHeader} from '@material-ui/core'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Card from '../../../shared/Card'\nimport Checkbox from '../../../shared/Checkbox'\nimport Dropdown from '../../../shared/Dropdown'\nimport FlexCol from '../../../shared/FlexCol'\nimport FlexRow from '../../../shared/FlexRow'\nimport FlexSpacer from '../../../shared/FlexSpacer'\nimport LabelValueDisplay from '../../../shared/LabelValueDisplay'\nimport setupData from './setupData'\n\nfunction Setup() {\n    const [players, setPlayers] = useState(2)\n    const [monorails, setMonorails] = useState(true)\n    const [grizzlies, setGrizzlies] = useState(true)\n    const data = setupData[players]\n\n    return (\n        <Card width={350}>\n            <CardHeader title=\"Setup Reference\"/>\n            <CardContent>\n                <FormGroup>\n                    <Dropdown label='Players' value={players} onChange={setPlayers} items={playersMenuItems}/>\n\n                    <FlexRow>\n                        <Checkbox label=\"Monorails\" checked={monorails} onChange={setMonorails}/>\n                        <FlexSpacer size={16}/>\n                        <Checkbox label=\"Grizzlies\" checked={grizzlies} onChange={setGrizzlies}/>\n                    </FlexRow>\n\n                    <FlexRow>\n                        <LabelValueDisplay\n                            label='Starting Tile'\n                            value={\n                                <FlexRow>\n                                    <FlexCol width={140}>\n                                        <span><b>P1:</b>&nbsp;Toilet</span>\n                                        {players > 2 && <span><b>P3:</b>&nbsp;Playground</span>}\n                                    </FlexCol>\n                                    <FlexCol width={140}>\n                                        <span><b>P2:</b>&nbsp;Playground</span>\n                                        {players > 3 && <span><b>P4:</b>&nbsp;Food Street</span>}\n                                    </FlexCol>\n                                </FlexRow>\n                            }\n                        />\n                    </FlexRow>\n\n                    <FlexRow>\n                        <FlexCol width={140}>\n                            <LabelValueDisplay label='Toilets' value={grizzlies ? data.grizzlyToilets : data.toilets}/>\n                            <LabelValueDisplay label='Playgrounds' value={data.playgrounds}/>\n                            <LabelValueDisplay\n                                label='Animal Houses'\n                                value={grizzlies ? data.grizzlyAnimalHouses : data.animalHouses}\n                            />\n                            {monorails && <LabelValueDisplay label='Monorail Towers' value={data.monorailTowers}/>}\n                        </FlexCol>\n\n                        <FlexSpacer size={24}/>\n\n                        <FlexCol width={140}>\n                            <LabelValueDisplay label='Food Streets' value={data.foodStreets}/>\n                            <LabelValueDisplay label='Rivers' value={data.rivers}/>\n                            <LabelValueDisplay\n                                label='Bear Statues'\n                                value={grizzlies ? data.grizzlyBearStatues : data.bearStatues}\n                            />\n                            {monorails && <LabelValueDisplay label='Monorail Cars' value={data.monorailCars}/>}\n                        </FlexCol>\n                    </FlexRow>\n                </FormGroup>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst playersMenuItems = Object.keys(setupData).map(value => ({label: `${value} players`, value}))\n\nexport default Setup\n","import React from 'react'\nimport Tabs from '../../shared/Tabs'\nimport Achievements from './achievements/Achievements'\nimport Setup from './setup/Setup'\n\nfunction Barenpark() {\n    const tabs = [\n        {label: 'Setup', content: <Setup/>},\n        {label: 'Achievements', content: <Achievements/>}\n    ]\n    return <Tabs title={'Bärenpark'} tabs={tabs}/>\n\n}\n\nexport default Barenpark\n","import {makeStyles} from '@material-ui/styles'\nimport React from 'react'\nimport MuiTextField from '@material-ui/core/TextField'\n\nfunction TextField({label, value, onChange, type}) {\n    const classes = useStyles()\n    return (\n        <MuiTextField\n            className={classes.textField}\n            label={label}\n            value={value}\n            type={type}\n            onChange={({target}) => onChange(target.value)}\n        />\n    )\n}\n\nconst useStyles = makeStyles({\n    textField: {\n        marginBottom: 16\n    }\n})\n\nexport default TextField\n","import React from 'react'\nimport Dropdown from '../../../shared/Dropdown'\n\nfunction UnitPrices(props) {\n    const items = [...new Array(26)]\n        .map((v, i) => i - 5)\n        .map(value => ({label: `$${value}`, value}))\n\n    return (\n        <Dropdown\n            label='Unit Price'\n            items={items}\n            {...props}\n        />\n    )\n}\n\nexport default UnitPrices\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Profit({value = 0}) {\n    const classes = useStyles()\n    return (\n        <div className={classes.container}>\n            <div className={classes.subheader}>Profit</div>\n            <div className={classes.dollars}>{`$${value}`}</div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        marginRight: 16,\n        marginBottom: 16,\n        width: '100%',\n        display: 'inline-block',\n        right: 0\n    },\n    subheader: {\n        textAlign: 'right',\n        color: theme.palette.text.secondary\n    },\n    dollars: {\n        fontSize: '38px',\n        fontWeight: 'bold',\n        color: 'darkgreen',\n        textAlign: 'right'\n    }\n}))\n\nexport default Profit\n","import React, {useState} from 'react'\nimport Card from '../../../shared/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Button from '@material-ui/core/Button'\nimport TextField from '../../../shared/TextField'\nimport Checkbox from '../../../shared/Checkbox'\nimport UnitPrices from './UnitPrices'\nimport Profit from './Profit'\n\nfunction BulkCalc() {\n    const [unitPrice, setUnitPrice] = useState(defaultState.unitPrice)\n    const [normalSales, setNormalSales] = useState(defaultState.normalSales)\n    const [gardenSales, setGardenSales] = useState(defaultState.gardenSales)\n    const [marketingBonuses, setMarketingBonuses] = useState(defaultState.marketingBonuses)\n    const [cfo, setCfo] = useState(defaultState.cfo)\n\n    const cfoMultiplier = cfo ? 1.5 : 1\n    const normalProfit = normalSales * unitPrice\n    const gardenProfit = gardenSales * unitPrice * 2\n    const marketingProfit = (marketingBonuses * 5)\n    const profit = Math.ceil(cfoMultiplier * (normalProfit + gardenProfit + marketingProfit))\n\n    const reset = () => {\n        setUnitPrice(defaultState.unitPrice)\n        setNormalSales(defaultState.normalSales)\n        setGardenSales(defaultState.gardenSales)\n        setMarketingBonuses(defaultState.marketingBonuses)\n        setCfo(defaultState.cfo)\n    }\n\n    return (\n        <Card>\n            <CardHeader title=\"Bulk Sale Calculator\"/>\n            <CardContent>\n                <FormGroup>\n                    <UnitPrices value={unitPrice} onChange={setUnitPrice}/>\n\n                    <TextField\n                        type=\"number\"\n                        label=\"Normal Sales\"\n                        value={normalSales}\n                        onChange={setNormalSales}\n                    />\n\n                    <TextField\n                        type=\"number\"\n                        label=\"Garden Sales\"\n                        value={gardenSales}\n                        onChange={setGardenSales}\n                    />\n\n                    <TextField\n                        type=\"number\"\n                        label=\"Marketing Bonuses\"\n                        value={marketingBonuses}\n                        onChange={setMarketingBonuses}\n                    />\n\n                    <Checkbox label=\"CFO Bonus\" checked={cfo} onChange={setCfo}/>\n                </FormGroup>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n                <Profit value={profit}/>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst defaultState = {\n    unitPrice: 10,\n    normalSales: 0,\n    gardenSales: 0,\n    marketingBonuses: 0,\n    cfo: false\n}\n\nexport default BulkCalc\n","import React, {useState} from 'react'\nimport Card from '../../../shared/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '../../../shared/Checkbox'\nimport Dropdown from '../../../shared/Dropdown'\nimport UnitPrices from './UnitPrices'\nimport Profit from './Profit'\n\nfunction Calc() {\n    const [bonusItemsSold, setBonusItemsSold] = useState(defaultState.bonusItemsSold)\n    const [cfo, setCfo] = useState(defaultState.cfo)\n    const [garden, setGarden] = useState(defaultState.garden)\n    const [itemsSold, setItemsSold] = useState(defaultState.itemsSold)\n    const [unitPrice, setUnitPrice] = useState(defaultState.unitPrice)\n\n    const salesError = !garden && itemsSold > 3\n    const bonusError = bonusItemsSold > itemsSold\n\n    const salesDollars = unitPrice * itemsSold\n    const bonusDollars = bonusItemsSold * 5\n    const gardenMultiplier = garden ? 2 : 1\n    const cfoMultiplier = cfo ? 1.5 : 1\n    const profit = Math.ceil(((salesDollars * gardenMultiplier) + bonusDollars) * cfoMultiplier)\n\n    const reset = () => {\n        setBonusItemsSold(defaultState.bonusItemsSold)\n        setCfo(defaultState.cfo)\n        setGarden(defaultState.garden)\n        setItemsSold(defaultState.itemsSold)\n        setUnitPrice(defaultState.unitPrice)\n    }\n\n    return (\n        <Card>\n            <CardHeader title=\"Dinnertime Calculator\"/>\n            <CardContent>\n                <FormGroup>\n                    <UnitPrices\n                        value={unitPrice}\n                        onChange={setUnitPrice}\n                    />\n\n                    <Dropdown\n                        label='Items Sold'\n                        value={itemsSold}\n                        onChange={setItemsSold}\n                        items={itemsSoldMenuItems}\n                        error={salesError}\n                        errorText='Items sold must be at most 3 for regular house.'\n                    />\n\n                    <Dropdown\n                        label='Marketing Bonuses'\n                        value={bonusItemsSold}\n                        onChange={setBonusItemsSold}\n                        items={bonusSalesMenuItems}\n                        error={bonusError}\n                        errorText='Marketing bonuses may not exceed items sold.'\n                    />\n\n                    <Checkbox label=\"Garden House\" checked={garden} onChange={setGarden}/>\n                    <Checkbox label=\"CFO Bonus\" checked={cfo} onChange={setCfo}/>\n                </FormGroup>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n                <Profit value={profit}/>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst itemsSoldMenuItems = [1, 2, 3, 4, 5].map(value => ({label: `${value} item(s) sold`, value}))\nconst bonusSalesMenuItems = [0, 1, 2, 3, 4, 5].map(value => ({label: `${value} bonus(es)`, value}))\n\nconst defaultState = {\n    bonusItemsSold: 0,\n    cfo: false,\n    garden: false,\n    itemsSold: 1,\n    unitPrice: 10\n}\n\nexport default Calc\n","export const originalMilestoneData = [\n    {color: '#AF95C2', title: 'to hire 3 people in 1 turn', text: '+2 Management Trainees.'},\n    {color: '#BDB6B3', title: 'to train someone', text: '$15 discount on salaries.'},\n    {color: '#98C2C9', title: 'billboard placed', text: 'No salaries for marketeers; Eternal marketing.'},\n    {color: '#AF95C2', title: 'to throw away drink/food', text: 'Get a freezer that stores 10 items (drink or food).'},\n    {color: '#95A968', title: 'burger produced', text: '+1 Burger Cook.'},\n    {color: '#98C2C9', title: 'burger marketed', text: '+$5 for every burger sold.'},\n    {color: '#AF95C2', title: 'waitress played', text: 'Each waitress +$2.'},\n    {color: '#95A968', title: 'pizza produced', text: '+1 Pizza Cook.'},\n    {color: '#98C2C9', title: 'pizza marketed', text: '+$5 for every pizza sold.'},\n    {color: '#AF95C2', title: 'to have $20', text: 'May see bank reserve cards.'},\n    {color: '#A9CB94', title: 'Errand Boy played', text: 'All buyers get +1 drink from each source.'},\n    {color: '#98C2C9', title: 'drink marketed', text: '+$5 for every drink sold.'},\n    {color: '#AF95C2', title: 'to have $100', text: 'Your CEO counts as CFO (+50% to cash earned). May not have CFO.'},\n    {color: '#A9CB94', title: 'Cart Operator played', text: 'Buyers get range +1.'},\n    {color: '#98C2C9', title: 'airplane campaign', text: 'Count +2 open slots when determining order of play.'},\n    {color: '#EAA791', title: 'to lower prices', text: 'Price -$1.'},\n    {color: '#BDB6B3', title: 'to pay $20 or more in salaries', text: 'May use multiple trainers on the same person.'},\n    {color: '#98C2C9', title: 'radio campaign', text: 'Your radios market 2 goods per turn instead of 1.'},\n    {color: '#cc0000', title: 'demand fulfulled by someone else', text: 'Range -1.'}\n]\nexport const alternateMilestoneData = [\n    {color: '#98C2C9', title: 'marketeer used', text: '$5 for every good marketed; Range -2.', maxRoundTwo: true},\n    {color: '#98C2C9', title: 'marketing trainee used', text: '+1 Kitchen Trainee and +1 Errand Boy.'},\n    {color: '#98C2C9', title: 'campaign manager used', text: 'May place second mailbox or billboard advertising same product and duration (only once).'},\n    {color: '#98C2C9', title: 'brand manager used', text: 'May place 2 different goods on first plane. Choose priority of goods when placed.'},\n    {color: '#98C2C9', title: 'brand director played', text: 'Your radio is permanent.'},\n    {color: '#EAA791', title: 'burger sold', text: 'CEO always has 4 slots (regardless of reserve cards).'},\n    {color: '#EAA791', title: 'pizza sold', text: 'Place radio tower on tile of sale (house) advertising pizza for two turns.'},\n    {color: '#EAA791', title: 'lemonade sold', text: 'Any employee can be trained on the job, preserving color.'},\n    {color: '#EAA791', title: 'beer sold', text: 'May pay salary with food or drink.'},\n    {color: '#EAA791', title: 'coke sold', text: 'Get a freezer that stores 10 items (drink or food).'},\n    {color: '#BDB6B3', title: 'recruiting girl played', text: 'Get a free executive vice president; Pay no salary for him.', maxRoundTwo: true},\n    {color: '#BDB6B3', title: 'trainer played', text: '+1 trainer; No longer need to fire employees if broke.', maxRoundTwo: true},\n    {color: '#BDB6B3', title: 'discount manager played', text: 'If you discount by -$3 or more, $100 is removed from the bank.'},\n    {color: '#AF95C2', title: 'house built', text: 'May use multiple trainers on the same person.'},\n    {color: '#934a34', title: 'new restaurant built', text: 'Place permanent mailbox in restaurant area.'},\n    {color: '#AF95C2', title: 'waitress played', text: 'Your salaries are $3 each.'},\n    {color: '#A9CB94', title: 'cart operator played', text: 'Double amount of drinks hauled by cart/truck/zeppelin.'},\n    {color: '#cc0000', title: 'demand fulfulled by someone else', text: 'Range -1.'}\n]\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Milestone({index, milestone, onChange, value}) {\n    const classes = useStyles()\n    const {color, title, text, maxRoundTwo} = milestone\n\n    const handleClick = () => {\n        let nextValue\n        if (value === 'available') nextValue = 'mine'\n        else if (value === 'mine') nextValue = 'unavailable'\n        else nextValue = 'available'\n\n        return onChange(index, nextValue)\n    }\n\n    return (\n        <div\n            className={classes.milestone}\n            style={{backgroundColor: color}}\n            onClick={handleClick}\n        >\n            {value === 'mine' && <div className={classes.checkmark}>✓</div>}\n            {value === 'unavailable' && <div className={classes.x}>✗</div>}\n            <div className={classes.container}>\n                <div className={classes.title}>First {title}</div>\n                <div className={classes.text}>{text}</div>\n                {maxRoundTwo && <div className={classes.maxRoundTwo}>Remove after<br/>round two</div>}\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    milestone: {\n        margin: 8,\n        width: 155,\n        height: 155,\n        userSelect: 'none',\n        cursor: 'pointer',\n        border: '1px solid black',\n        borderRadius: 10\n    },\n    container: {\n        margin: 6\n    },\n    title: {\n        textAlign: 'center',\n        fontWeight: 600,\n        textTransform: 'uppercase',\n        marginBottom: 12,\n        color: '#000'\n    },\n    text: {\n        textAlign: 'center',\n        fontSize: 'small',\n        color: '#000'\n    },\n    maxRoundTwo: {\n        width: 145,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 'small',\n        color: '#f00',\n        position: 'absolute',\n        bottom: 4\n    },\n    checkmark: {\n        fontSize: 'xx-large',\n        color: '#0f0',\n        position: 'absolute',\n        left: 2,\n        bottom: 0\n    },\n    x: {\n        fontSize: 'xx-large',\n        color: '#f00',\n        position: 'absolute',\n        left: 4,\n        bottom: 0\n    }\n})\n\nexport default Milestone\n","import FormControlLabel from '@material-ui/core/FormControlLabel'\nimport React, {useEffect, useState} from 'react'\nimport Card from '../../../shared/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Button from '@material-ui/core/Button'\nimport Masonry from 'react-masonry-component'\nimport FlexRow from '../../../shared/FlexRow'\nimport FlexSpacer from '../../../shared/FlexSpacer'\nimport {originalMilestoneData, alternateMilestoneData} from './milestoneData'\nimport Milestone from './Milestone'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\n\nfunction Milestones() {\n    const getDataArray = (type = milestoneType) => {\n        const data = type === 'original' ? originalMilestoneData : alternateMilestoneData\n        return data.map(() => 'available')\n    }\n\n    const [{milestones, milestoneType}, setMilestones] = useState(() => {\n        try {\n            const oldStorageData = localStorage.getItem(localStorageKey)\n            const parsedData = JSON.parse(oldStorageData)\n            if (parsedData && parsedData.milestones && parsedData.milestoneType) {\n                return parsedData\n            }\n        } catch (ex) {\n            console.warn('Error loading local storage data: ', ex)\n            localStorage.removeItem(localStorageKey)\n        }\n        return {\n            milestones: getDataArray('original'),\n            milestoneType: 'original'\n        }\n    })\n\n    useEffect(() => {\n        const data = JSON.stringify({milestones, milestoneType})\n        localStorage.setItem(localStorageKey, data)\n    }, [milestones, milestoneType])\n\n    const reset = () => {\n        const newMilestones = getDataArray()\n        setMilestones({milestones: newMilestones, milestoneType})\n\n        const newValue = JSON.stringify({\n            milestones: newMilestones,\n            milestoneType\n        })\n        localStorage.setItem(localStorageKey, newValue)\n    }\n\n    const updateMilestones = (index, value) => {\n        const newMilestones = [...milestones]\n        newMilestones[index] = value\n        setMilestones({milestones: newMilestones, milestoneType})\n    }\n\n    const handleMilestoneSetChange = event => {\n        const newType = event.target.value\n        if (newType !== milestoneType) {\n            // set defaults\n            setMilestones({\n                milestones: getDataArray(newType),\n                milestoneType: newType\n            })\n        }\n    }\n\n    const milestoneData = milestoneType === 'original' ? originalMilestoneData : alternateMilestoneData\n    return (\n        <Card width='auto' maxWidth={900}>\n            <CardHeader title=\"Milestone Tracker\"/>\n            <CardContent>\n                <Masonry>\n                    {milestones.map((value, key) =>\n                        <Milestone\n                            key={key}\n                            index={key}\n                            milestone={milestoneData[key]}\n                            value={value}\n                            onChange={updateMilestones}\n                        />\n                    )}\n                </Masonry>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n\n                <FlexSpacer/>\n\n                <RadioGroup\n                    name=\"milestoneType\"\n                    value={milestoneType}\n                    onChange={handleMilestoneSetChange}\n                >\n                    <FlexRow>\n                        <FormControlLabel\n                            value=\"original\"\n                            control={<Radio/>}\n                            label=\"Original\"\n                        />\n                        <FormControlLabel\n                            value=\"alternate\"\n                            control={<Radio/>}\n                            label=\"Alternate\"\n                        />\n                    </FlexRow>\n                </RadioGroup>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport const localStorageKey = 'milestones'\n\nexport default Milestones\n","export default {\n    2: {\n        mapSize: '3 x 3',\n        employees: '1',\n        billboards: '#2, #3, #12, #15, #16',\n        reserve: '$100'\n    },\n    3: {\n        mapSize: '3 x 4',\n        employees: '1',\n        billboards: '#2, #3, #15, #16',\n        reserve: '$150'\n    },\n    4: {\n        mapSize: '4 x 4',\n        employees: '2',\n        billboards: '#3, #16',\n        reserve: '$200'\n    },\n    5: {\n        mapSize: '4 x 5',\n        employees: '3',\n        billboards: 'None',\n        reserve: '$250'\n    }\n}\n","import React, {useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Dropdown from '../../../shared/Dropdown'\nimport LabelValueDisplay from '../../../shared/LabelValueDisplay'\nimport setupData from './setupData'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Setup() {\n    const classes = useStyles()\n    const [players, setPlayers] = useState(2)\n    const data = setupData[players]\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Setup Reference\"/>\n            <CardContent>\n                <FormGroup>\n                    <Dropdown\n                        label='Players'\n                        value={players}\n                        onChange={setPlayers}\n                        items={playersMenuItems}\n                    />\n\n                    <LabelValueDisplay label='Map Size' value={data.mapSize}/>\n                    <LabelValueDisplay label='1x Employees' value={data.employees}/>\n                    <LabelValueDisplay label='Billboards Removed' value={data.billboards}/>\n                    <LabelValueDisplay label='Reserve' value={data.reserve}/>\n                </FormGroup>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst playersMenuItems = Object.keys(setupData).map(value => ({label: `${value} players`, value}))\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 275\n    }\n})\n\nexport default Setup\n","import React from 'react'\nimport Tabs from '../../shared/Tabs'\n\nfunction Unearth() {\n    const tabs = [\n        {label: 'Setup', content: <div/>}\n    ]\n    return <Tabs title={'Unearth'} tabs={tabs}/>\n\n}\n\nexport default Unearth\n","import Barenpark from './barenpark/Barenpark'\nimport FoodChainMagnate from './foodChainMagnate/FoodChainMagnate'\nimport QuacksOfQuedlinberg from './quacksOfQuedlinberg/QuacksOfQuedlinberg'\nimport RollPlayer from './rollPlayer/RollPlayer'\nimport Unearth from './unearth/Unearth'\n\nexport default [\n    {name: 'Bärenpark', path: '/barenpark', component: Barenpark},\n    {name: 'Food Chain Magnate', path: '/foodChainMagnate', component: FoodChainMagnate},\n    {name: 'Quacks of Quedlinberg', path: '/quacksOfQuedlinberg', component: QuacksOfQuedlinberg},\n    {name: 'Roll Player', path: '/rollPlayer', component: RollPlayer},\n    {name: 'Unearth', path: '/unearth', component: Unearth}\n]\n","import React from 'react'\nimport Tabs from '../../shared/Tabs'\nimport BulkCalc from './calc/BulkCalc'\nimport Calc from './calc/Calc'\nimport Milestones from './milestones/Milestones'\nimport Setup from './setup/Setup'\n\nfunction FoodChainMagnate() {\n    const tabs = [\n        {label: 'Simple Sales', content: <Calc/>},\n        {label: 'Bulk Sales', content: <BulkCalc/>},\n        {label: 'Milestones', content: <Milestones/>},\n        {label: 'Setup', content: <Setup/>}\n    ]\n    return <Tabs title={'Food Chain Magnate'} tabs={tabs}/>\n}\n\nexport default FoodChainMagnate\n","import React from 'react'\nimport Tabs from '../../shared/Tabs'\n\nfunction QuacksOfQuedlinberg() {\n    const tabs = [\n        {label: 'Setup', content: <div/>}\n    ]\n    return <Tabs title={'Quacks of Quedlinberg'} tabs={tabs}/>\n\n}\n\nexport default QuacksOfQuedlinberg\n","import React from 'react'\nimport Tabs from '../../shared/Tabs'\n\nfunction RollPlayer() {\n    const tabs = [\n        {label: 'Setup', content: <div/>}\n    ]\n    return <Tabs title={'Roll Player'} tabs={tabs}/>\n\n}\n\nexport default RollPlayer\n","import {CardHeader} from '@material-ui/core'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport Card from '../shared/Card'\n\nfunction Home() {\n    return (\n        <Card>\n            <CardHeader title='Welcome!'/>\n            <CardContent>\n                <Typography>\n                    Welcome to BGHelper!\n\n                    Select a game in the menu to the left or search for one above.\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\n\nfunction ExpandIcon({open}) {\n    const classes = useStyles()\n    return <ExpandLessIcon className={open ? classes.open : classes.closed}/>\n}\n\nconst useStyles = makeStyles(theme => ({\n    closed: {\n        transition: 'transform .2s',\n        transform: 'rotate(180deg)',\n        color: `${theme.palette.text.primary} !important`\n    },\n    open: {\n        transition: 'transform .2s',\n        transform: 'rotate(0deg)',\n        color: `${theme.palette.text.primary} !important`\n    }\n}))\n\nexport default ExpandIcon\n","import React, {useCallback, useEffect, useRef, useState} from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Dialog from '@material-ui/core/Dialog'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\nimport {useHistory} from 'react-router-dom'\nimport games from '../games/games'\n\nfunction SiteSearch() {\n    const classes = useStyles()\n    const history = useHistory()\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const [value, setValue] = useState(null)\n    const openDialog = () => setDialogOpen(true)\n    const closeDialog = () => setDialogOpen(false)\n    const autocomplete = useRef(null)\n\n    const handleKeyUp = useCallback(event => {\n        if (event.key === '.' && !excludedTags.includes(event.target.tagName)) {\n            openDialog()\n        }\n    }, [])\n\n    useEffect(() => {\n        if (dialogOpen && autocomplete && autocomplete.current) {\n            setTimeout(() => autocomplete.current.focus(), 125)\n        }\n    }, [dialogOpen, autocomplete])\n\n    useEffect(() => {\n        document.addEventListener('keyup', handleKeyUp)\n        return () => document.removeEventListener('keyup', handleKeyUp)\n    }, [handleKeyUp])\n\n    const handleChange = (event, value) => {\n        if (value) {\n            history.push(value.path)\n            setValue(null)\n            closeDialog()\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Tooltip title='Site Search'>\n                <IconButton onClick={openDialog}>\n                    <SearchIcon/>\n                </IconButton>\n            </Tooltip>\n\n            <Dialog\n                keepMounted\n                open={dialogOpen}\n                onClose={closeDialog}\n                classes={{\n                    paper: classes.dialogPaper,\n                    root: classes.dialogRoot\n                }}\n            >\n                <Autocomplete\n                    className={classes.autocomplete}\n                    autoComplete\n                    autoHightlight\n                    clearOnEscape\n                    options={games}\n                    value={value}\n                    onChange={handleChange}\n                    onClose={closeDialog}\n                    getOptionLabel={option => option.name}\n                    renderInput={params => (\n                        <TextField\n                            {...params}\n                            label='Site Search'\n                            variant='outlined'\n                            fullWidth\n                            inputRef={autocomplete}\n                        />\n                    )}\n                    classes={{\n                        popup: classes.popup\n                    }}\n                />\n            </Dialog>\n        </React.Fragment>\n    )\n}\n\nconst excludedTags = [\n    'INPUT',\n    'TEXTAREA',\n    'SELECT'\n]\n\nconst useStyles = makeStyles({\n    autocomplete: {\n        width: 300\n    },\n    dialogPaper: {\n        overflowY: 'visible'\n    },\n    dialogRoot: {\n        top: '48px !important',\n        bottom: 'unset !important'\n    },\n    popup: {\n        zIndex: 1301\n    }\n})\n\nexport default SiteSearch\n","import React, {useContext, useState} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport games from '../games/games'\nimport TitleContext from '../shared/TitleContext'\nimport ExpandIcon from './ExpandIcon'\nimport githubSvg from './github.svg'\nimport {makeStyles} from '@material-ui/styles'\nimport {Link} from 'react-router-dom'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ExtensionIcon from '@material-ui/icons/Extension'\nimport HomeIcon from '@material-ui/icons/Home'\nimport BuildIcon from '@material-ui/icons/Build'\nimport Collapse from '@material-ui/core/Collapse'\nimport Divider from '@material-ui/core/Divider'\nimport SiteSearch from './SiteSearch'\n\nfunction Nav() {\n    const classes = useStyles()\n    const {title} = useContext(TitleContext)\n    const [expandedMenu, setExpandedMenu] = useState(null)\n    const [drawerOpen, setDrawerOpen] = useState(false)\n\n    const openDrawer = () => setDrawerOpen(true)\n    const closeDrawer = () => setDrawerOpen(false)\n\n    const handleExpand = value => () => setExpandedMenu(expandedMenu === value ? null : value)\n\n    return (\n        <React.Fragment>\n            <AppBar position='static'>\n                <Toolbar className={classes.toolbar}>\n                    {/* Menu button */}\n                    <IconButton className={classes.menuButton} onClick={openDrawer}>\n                        <MenuIcon/>\n                    </IconButton>\n\n                    {/* Title bar */}\n                    <Typography variant='h6' className={classes.title}>\n                        {title}\n                    </Typography>\n\n                    {/* Search */}\n                    <SiteSearch/>\n\n                    {/* Top right icons */}\n                    <Tooltip title='Contribute on GitHub!'>\n                        <IconButton target='_blank' href='https://github.com/NiXXeD/bghelper'>\n                            <img alt='github link' width='24' height='24' src={githubSvg}/>\n                        </IconButton>\n                    </Tooltip>\n                </Toolbar>\n            </AppBar>\n\n            {/* Left Drawer*/}\n            <SwipeableDrawer open={drawerOpen} onOpen={openDrawer} onClose={closeDrawer} classes={{paper: classes.drawerPaper}}>\n                <Link className={classes.link} to='/'>\n                    <ListItem button onClick={closeDrawer}>\n                        <ListItemIcon><HomeIcon/></ListItemIcon>\n                        <ListItemText primary='Home'/>\n                    </ListItem>\n                </Link>\n\n                <Divider/>\n\n                <List>\n                    {/* Games list */}\n                    <ListItem button onClick={handleExpand('games')}>\n                        <ListItemIcon><ExtensionIcon/></ListItemIcon>\n                        <ListItemText primary='Games'/>\n                        <ExpandIcon open={expandedMenu === 'games'}/>\n                    </ListItem>\n                    <Collapse in={expandedMenu === 'games'} timeout='auto'>\n                        {games.map(({path, name}) =>\n                            <Link key={path} className={classes.link} to={path}>\n                                <ListItem className={classes.nested} button onClick={closeDrawer}>\n                                    <ListItemText primary={name}/>\n                                </ListItem>\n                            </Link>\n                        )}\n                    </Collapse>\n\n                    {/* Utilities */}\n                    <ListItem button onClick={handleExpand('utils')}>\n                        <ListItemIcon><BuildIcon/></ListItemIcon>\n                        <ListItemText primary='Utilities'/>\n                        <ExpandIcon open={expandedMenu === 'utils'}/>\n                    </ListItem>\n                    <Collapse in={expandedMenu === 'utils'} timeout='auto'>\n                        <ListItem className={classes.nested} button onClick={closeDrawer}>\n                            <ListItemText primary='TBD'/>\n                        </ListItem>\n                    </Collapse>\n                </List>\n            </SwipeableDrawer>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    drawerPaper: {\n        width: 225\n    },\n    toolbar: {\n        paddingLeft: 8,\n        paddingRight: 8\n    },\n    title: {\n        paddingLeft: 12,\n        flex: 1\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit'\n    }\n}))\n\nexport default Nav\n","import React, {useCallback, useMemo, useState} from 'react'\nimport TitleContext from './TitleContext'\n\nfunction TitleContextProvider({children}) {\n    const [title, setTitle] = useState(defaultTitle)\n    const clearTitle = useCallback(() => setTitle(defaultTitle), [])\n    const value = useMemo(() => ({title, setTitle, clearTitle}), [title, clearTitle])\n\n    return (\n        <TitleContext.Provider value={value}>\n            {children}\n        </TitleContext.Provider>\n    )\n}\n\nconst defaultTitle = 'Board Game Helper'\n\nexport default TitleContextProvider\n","import React from 'react'\nimport {createMuiTheme} from '@material-ui/core/styles'\nimport {ThemeProvider} from '@material-ui/styles'\nimport {HashRouter, Route} from 'react-router-dom'\nimport games from './games/games'\nimport Home from './nav/Home'\nimport Nav from './nav/Nav'\nimport TitleContextProvider from './shared/TitleContextProvider'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark'\n    }\n})\n\nfunction App() {\n    return (\n        <HashRouter>\n            <ThemeProvider theme={theme}>\n                <TitleContextProvider>\n                    <div>\n                        <Nav/>\n\n                        <Route exact path=\"/\"><Home/></Route>\n\n                        {/* Game routes*/}\n                        {games.map(({path, component: Component}) =>\n                            <Route exact path={path} key={path}>\n                                <Component/>\n                            </Route>\n                        )}\n                    </div>\n                </TitleContextProvider>\n            </ThemeProvider>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\nfunction render(Component) {\n    ReactDOM.render(<Component/>, document.getElementById('root'))\n}\n\nrender(App)\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n        const next = require('./App').default\n        render(next)\n    })\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready\n                    .then(() => {\n                        console.log(\n                            'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                        )\n                    })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister()\n                        .then(() => {\n                            window.location.reload()\n                        })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => registration.unregister())\n    }\n}\n"],"sourceRoot":""}